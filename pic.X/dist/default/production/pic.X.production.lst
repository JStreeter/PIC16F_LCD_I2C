

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 13 06:55:36 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	idataBANK0
   463  03B0                     __pidataBANK0:	
   464                           
   465                           ;initializer for setCursor@F1735
   466  03B0  3400               	retlw	0
   467  03B1  3400               	retlw	0
   468  03B2  3440               	retlw	64
   469  03B3  3400               	retlw	0
   470  03B4  3414               	retlw	20
   471  03B5  3400               	retlw	0
   472  03B6  3454               	retlw	84
   473  03B7  3400               	retlw	0
   474                           
   475                           ;initializer for _randx
   476  03B8  3401               	retlw	1
   477  03B9  3400               	retlw	0
   478  03BA  3400               	retlw	0
   479  03BB  3400               	retlw	0
   480                           
   481                           ;initializer for __backlightval
   482  03BC  3408               	retlw	8
   483  03BD  3400               	retlw	0
   484                           
   485                           ;initializer for __rows
   486  03BE  3402               	retlw	2
   487  03BF  3400               	retlw	0
   488                           
   489                           ;initializer for __cols
   490  03C0  3410               	retlw	16
   491  03C1  3400               	retlw	0
   492                           
   493                           ;initializer for __addr
   494  03C2  3440               	retlw	64
   495  03C3  3400               	retlw	0
   496  0019                     _TXREG	set	25
   497  0018                     _RCSTA	set	24
   498  0006                     _PORTB	set	6
   499  001E                     _ADRESH	set	30
   500  0008                     _PORTD	set	8
   501  0013                     _SSPBUF	set	19
   502  0014                     _SSPCON	set	20
   503  0008                     _PORTDbits	set	8
   504  0064                     _TXIF	set	100
   505  006B                     _BCLIF	set	107
   506  00F9                     _GO	set	249
   507  0063                     _SSPIF	set	99
   508  0099                     _SPBRG	set	153
   509  0098                     _TXSTA	set	152
   510  0087                     _TRISCbits	set	135
   511  009E                     _ADRESL	set	158
   512  0094                     _SSPSTAT	set	148
   513  0093                     _SSPADD	set	147
   514  0091                     _SSPCON2	set	145
   515  0088                     _TRISDbits	set	136
   516  04A7                     _SMP	set	1191
   517  04A6                     _CKE	set	1190
   518  04A2                     _R_W	set	1186
   519  048B                     _RCEN	set	1163
   520  048C                     _ACKEN	set	1164
   521  048D                     _ACKDT	set	1165
   522  048E                     _ACKSTAT	set	1166
   523  048A                     _PEN	set	1162
   524  0489                     _RSEN	set	1161
   525  0488                     _SEN	set	1160
   526  043C                     _TRISC4	set	1084
   527  043B                     _TRISC3	set	1083
   528                           
   529                           	psect	strings
   530  0003                     __pstrings:	
   531  0003                     stringtab:	
   532  0003                     __stringtab:	
   533  0003                     stringcode:	
   534                           ;	String table - string pointers are 1 byte each
   535                           
   536  0003                     stringdir:	
   537  0003  3000               	movlw	high stringdir
   538  0004  008A               	movwf	10
   539  0005  0804               	movf	4,w
   540  0006  0A84               	incf	4,f
   541  0007  0782               	addwf	2,f
   542  0008                     __stringbase:	
   543  0008  3400               	retlw	0
   544  0009                     __end_of__stringtab:	
   545  0009                     STR_4:	
   546  0009  344D               	retlw	77	;'M'
   547  000A  3469               	retlw	105	;'i'
   548  000B  3473               	retlw	115	;'s'
   549  000C  3474               	retlw	116	;'t'
   550  000D  3465               	retlw	101	;'e'
   551  000E  3472               	retlw	114	;'r'
   552  000F  3420               	retlw	32	;' '
   553  0010  3448               	retlw	72	;'H'
   554  0011  3461               	retlw	97	;'a'
   555  0012  346C               	retlw	108	;'l'
   556  0013  3420               	retlw	32	;' '
   557  0014  3473               	retlw	115	;'s'
   558  0015  3465               	retlw	101	;'e'
   559  0016  347A               	retlw	122	;'z'
   560  0017  343A               	retlw	58	;':'
   561  0018  3420               	retlw	32	;' '
   562  0019  3448               	retlw	72	;'H'
   563  001A  3465               	retlw	101	;'e'
   564  001B  346C               	retlw	108	;'l'
   565  001C  346C               	retlw	108	;'l'
   566  001D  346F               	retlw	111	;'o'
   567  001E  342C               	retlw	44	;','
   568  001F  3420               	retlw	32	;' '
   569  0020  3457               	retlw	87	;'W'
   570  0021  346F               	retlw	111	;'o'
   571  0022  3472               	retlw	114	;'r'
   572  0023  346C               	retlw	108	;'l'
   573  0024  3464               	retlw	100	;'d'
   574  0025  3421               	retlw	33	;'!'
   575  0026  3421               	retlw	33	;'!'
   576  0027  3400               	retlw	0
   577  0028                     STR_6:	
   578  0028  3420               	retlw	32	;' '
   579  0029  3420               	retlw	32	;' '
   580  002A  3444               	retlw	68	;'D'
   581  002B  346F               	retlw	111	;'o'
   582  002C  3420               	retlw	32	;' '
   583  002D  346E               	retlw	110	;'n'
   584  002E  346F               	retlw	111	;'o'
   585  002F  3474               	retlw	116	;'t'
   586  0030  3420               	retlw	32	;' '
   587  0031  346C               	retlw	108	;'l'
   588  0032  346F               	retlw	111	;'o'
   589  0033  346F               	retlw	111	;'o'
   590  0034  346B               	retlw	107	;'k'
   591  0035  3420               	retlw	32	;' '
   592  0036  3469               	retlw	105	;'i'
   593  0037  346E               	retlw	110	;'n'
   594  0038  3474               	retlw	116	;'t'
   595  0039  346F               	retlw	111	;'o'
   596  003A  3420               	retlw	32	;' '
   597  003B  344C               	retlw	76	;'L'
   598  003C  3461               	retlw	97	;'a'
   599  003D  3473               	retlw	115	;'s'
   600  003E  3465               	retlw	101	;'e'
   601  003F  3472               	retlw	114	;'r'
   602  0040  3420               	retlw	32	;' '
   603  0041  3477               	retlw	119	;'w'
   604  0042  3469               	retlw	105	;'i'
   605  0043  3474               	retlw	116	;'t'
   606  0044  3468               	retlw	104	;'h'
   607  0045  3400               	retlw	0
   608  0046                     STR_5:	
   609  0046  3448               	retlw	72	;'H'
   610  0047  3461               	retlw	97	;'a'
   611  0048  3476               	retlw	118	;'v'
   612  0049  3465               	retlw	101	;'e'
   613  004A  3420               	retlw	32	;' '
   614  004B  3461               	retlw	97	;'a'
   615  004C  3420               	retlw	32	;' '
   616  004D  3476               	retlw	118	;'v'
   617  004E  3465               	retlw	101	;'e'
   618  004F  3472               	retlw	114	;'r'
   619  0050  3479               	retlw	121	;'y'
   620  0051  3420               	retlw	32	;' '
   621  0052  3448               	retlw	72	;'H'
   622  0053  3461               	retlw	97	;'a'
   623  0054  3470               	retlw	112	;'p'
   624  0055  3470               	retlw	112	;'p'
   625  0056  3479               	retlw	121	;'y'
   626  0057  3420               	retlw	32	;' '
   627  0058  344E               	retlw	78	;'N'
   628  0059  3465               	retlw	101	;'e'
   629  005A  3477               	retlw	119	;'w'
   630  005B  3420               	retlw	32	;' '
   631  005C  3459               	retlw	89	;'Y'
   632  005D  3465               	retlw	101	;'e'
   633  005E  3461               	retlw	97	;'a'
   634  005F  3472               	retlw	114	;'r'
   635  0060  3421               	retlw	33	;'!'
   636  0061  3400               	retlw	0
   637  0062                     STR_7:	
   638  0062  3420               	retlw	32	;' '
   639  0063  3420               	retlw	32	;' '
   640  0064  3420               	retlw	32	;' '
   641  0065  3420               	retlw	32	;' '
   642  0066  3420               	retlw	32	;' '
   643  0067  3420               	retlw	32	;' '
   644  0068  3472               	retlw	114	;'r'
   645  0069  3465               	retlw	101	;'e'
   646  006A  346D               	retlw	109	;'m'
   647  006B  3461               	retlw	97	;'a'
   648  006C  3469               	retlw	105	;'i'
   649  006D  346E               	retlw	110	;'n'
   650  006E  3469               	retlw	105	;'i'
   651  006F  346E               	retlw	110	;'n'
   652  0070  3467               	retlw	103	;'g'
   653  0071  3420               	retlw	32	;' '
   654  0072  3467               	retlw	103	;'g'
   655  0073  346F               	retlw	111	;'o'
   656  0074  346F               	retlw	111	;'o'
   657  0075  3464               	retlw	100	;'d'
   658  0076  3420               	retlw	32	;' '
   659  0077  3465               	retlw	101	;'e'
   660  0078  3479               	retlw	121	;'y'
   661  0079  3465               	retlw	101	;'e'
   662  007A  3400               	retlw	0
   663  007B                     STR_8:	
   664  007B  3454               	retlw	84	;'T'
   665  007C  3475               	retlw	117	;'u'
   666  007D  3472               	retlw	114	;'r'
   667  007E  346E               	retlw	110	;'n'
   668  007F  3420               	retlw	32	;' '
   669  0080  3474               	retlw	116	;'t'
   670  0081  3468               	retlw	104	;'h'
   671  0082  3465               	retlw	101	;'e'
   672  0083  3420               	retlw	32	;' '
   673  0084  3464               	retlw	100	;'d'
   674  0085  3469               	retlw	105	;'i'
   675  0086  3461               	retlw	97	;'a'
   676  0087  346C               	retlw	108	;'l'
   677  0088  342E               	retlw	46	;'.'
   678  0089  342E               	retlw	46	;'.'
   679  008A  342E               	retlw	46	;'.'
   680  008B  3400               	retlw	0
   681  008C                     STR_2:	
   682  008C  3448               	retlw	72	;'H'
   683  008D  3465               	retlw	101	;'e'
   684  008E  346E               	retlw	110	;'n'
   685  008F  3472               	retlw	114	;'r'
   686  0090  3469               	retlw	105	;'i'
   687  0091  3471               	retlw	113	;'q'
   688  0092  3475               	retlw	117	;'u'
   689  0093  3465               	retlw	101	;'e'
   690  0094  3420               	retlw	32	;' '
   691  0095  3426               	retlw	38	;'&'
   692  0096  3420               	retlw	32	;' '
   693  0097  3443               	retlw	67	;'C'
   694  0098  3461               	retlw	97	;'a'
   695  0099  3469               	retlw	105	;'i'
   696  009A  346F               	retlw	111	;'o'
   697  009B  3400               	retlw	0
   698  009C                     STR_1:	
   699  009C  3420               	retlw	32	;' '
   700  009D  3420               	retlw	32	;' '
   701  009E  3450               	retlw	80	;'P'
   702  009F  3472               	retlw	114	;'r'
   703  00A0  346F               	retlw	111	;'o'
   704  00A1  346A               	retlw	106	;'j'
   705  00A2  3465               	retlw	101	;'e'
   706  00A3  3474               	retlw	116	;'t'
   707  00A4  346F               	retlw	111	;'o'
   708  00A5  3420               	retlw	32	;' '
   709  00A6  3432               	retlw	50	;'2'
   710  00A7  3430               	retlw	48	;'0'
   711  00A8  3431               	retlw	49	;'1'
   712  00A9  3437               	retlw	55	;'7'
   713  00AA  3400               	retlw	0
   714  00AB                     STR_9:	
   715  00AB  3441               	retlw	65	;'A'
   716  00AC  3444               	retlw	68	;'D'
   717  00AD  3443               	retlw	67	;'C'
   718  00AE  3420               	retlw	32	;' '
   719  00AF  3476               	retlw	118	;'v'
   720  00B0  3461               	retlw	97	;'a'
   721  00B1  346C               	retlw	108	;'l'
   722  00B2  3475               	retlw	117	;'u'
   723  00B3  3465               	retlw	101	;'e'
   724  00B4  3420               	retlw	32	;' '
   725  00B5  343D               	retlw	61	;'='
   726  00B6  3420               	retlw	32	;' '
   727  00B7  3400               	retlw	0
   728  00B8                     STR_3:	
   729  00B8  3447               	retlw	71	;'G'
   730  00B9  3461               	retlw	97	;'a'
   731  00BA  346E               	retlw	110	;'n'
   732  00BB  3468               	retlw	104	;'h'
   733  00BC  346F               	retlw	111	;'o'
   734  00BD  3475               	retlw	117	;'u'
   735  00BE  3420               	retlw	32	;' '
   736  00BF  346F               	retlw	111	;'o'
   737  00C0  342F               	retlw	47	;'/'
   738  00C1  346F               	retlw	111	;'o'
   739  00C2  342F               	retlw	47	;'/'
   740  00C3  3400               	retlw	0
   741  00C4                     STR_10:	
   742  00C4  3420               	retlw	32	;' '
   743  00C5  3420               	retlw	32	;' '
   744  00C6  3420               	retlw	32	;' '
   745  00C7  3420               	retlw	32	;' '
   746  00C8  3400               	retlw	0
   747                           
   748                           ; #config settings
   749  0000                     
   750                           	psect	cinit
   751  07E9                     start_initialization:	
   752  07E9                     __initialization:	
   753                           
   754                           ; Initialize objects allocated to BANK0
   755  07E9  1383               	bcf	3,7	;select IRP bank0
   756  07EA  3051               	movlw	low (__pdataBANK0+20)
   757  07EB  00FD               	movwf	btemp+-1
   758  07EC  3003               	movlw	high __pidataBANK0
   759  07ED  00FE               	movwf	btemp
   760  07EE  30B0               	movlw	low __pidataBANK0
   761  07EF  00FF               	movwf	btemp+1
   762  07F0  303D               	movlw	low __pdataBANK0
   763  07F1  0084               	movwf	4
   764  07F2  120A  118A  2391   	fcall	init_ram0
   765                           
   766                           ; Clear objects allocated to BANK0
   767  07F5  01D1               	clrf	__pbssBANK0& (0+127)
   768  07F6  01D2               	clrf	(__pbssBANK0+1)& (0+127)
   769  07F7  01D3               	clrf	(__pbssBANK0+2)& (0+127)
   770  07F8  01D4               	clrf	(__pbssBANK0+3)& (0+127)
   771  07F9  01D5               	clrf	(__pbssBANK0+4)& (0+127)
   772  07FA  01D6               	clrf	(__pbssBANK0+5)& (0+127)
   773  07FB  01D7               	clrf	(__pbssBANK0+6)& (0+127)
   774  07FC                     end_of_initialization:	
   775                           ;End of C runtime variable initialization code
   776                           
   777  07FC                     __end_of__initialization:	
   778  07FC  0183               	clrf	3
   779  07FD  120A  118A  2E7A   	ljmp	_main	;jump to C main() function
   780                           
   781                           	psect	bssBANK0
   782  0051                     __pbssBANK0:	
   783  0051                     __displaymode:	
   784  0051                     	ds	2
   785  0053                     __displaycontrol:	
   786  0053                     	ds	2
   787  0055                     __displayfunction:	
   788  0055                     	ds	2
   789  0057                     _RS:	
   790  0057                     	ds	1
   791                           
   792                           	psect	dataBANK0
   793  003D                     __pdataBANK0:	
   794  003D                     setCursor@F1735:	
   795  003D                     	ds	8
   796  0045                     _randx:	
   797  0045                     	ds	4
   798  0049                     __backlightval:	
   799  0049                     	ds	2
   800  004B                     __rows:	
   801  004B                     	ds	2
   802  004D                     __cols:	
   803  004D                     	ds	2
   804  004F                     __addr:	
   805  004F                     	ds	2
   806                           
   807                           	psect	inittext
   808  038D                     init_fetch0:	
   809                           ;	Called with low address in FSR and high address in W
   810                           
   811  038D  087E               	movf	126,w
   812  038E  008A               	movwf	10
   813  038F  087F               	movf	127,w
   814  0390  0082               	movwf	2
   815  0391                     init_ram0:	
   816                           ;Called with:
   817                           ;	high address of idata address in btemp 
   818                           ;	low address of idata address in btemp+1 
   819                           ;	low address of data in FSR
   820                           ;	high address + 1 of data in btemp-1
   821                           
   822  0391  238D  120A  118A   	fcall	init_fetch0
   823  0394  0080               	movwf	0
   824  0395  0A84               	incf	4,f
   825  0396  0804               	movf	4,w
   826  0397  067D               	xorwf	125,w
   827  0398  1903               	btfsc	3,2
   828  0399  3400               	retlw	0
   829  039A  0AFF               	incf	127,f
   830  039B  1903               	btfsc	3,2
   831  039C  0AFE               	incf	126,f
   832  039D  2B91               	goto	init_ram0
   833                           
   834                           	psect	cstackCOMMON
   835  0070                     __pcstackCOMMON:	
   836  0070                     ?_backlight:	
   837  0070                     ?_noCursor:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_clear:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_writeStr:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_writeChar:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_expanderWrite:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_write4bits:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_command:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_pulseEnable:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_main:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_I2C_Master_Wait:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_I2C_Master_Wait:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_I2C_Master_Start:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ??_I2C_Master_Start:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_I2C_Master_Stop:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ??_I2C_Master_Stop:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_I2C_Master_Write:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ??_I2C_Master_Write:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_write:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?___lmul:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?___lldiv:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0070                     I2C_Master_Write@d:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     ___lmul@multiplier:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ___lldiv@divisor:	
   904                           ; 4 bytes @ 0x0
   905                           
   906                           
   907                           ; 4 bytes @ 0x0
   908  0070                     	ds	1
   909  0071                     I2C_Master_Write@ackflag:	
   910                           
   911                           ; 1 bytes @ 0x1
   912  0071                     	ds	1
   913  0072                     ??_expanderWrite:	
   914  0072                     expanderWrite@data:	
   915                           ; 1 bytes @ 0x2
   916                           
   917                           
   918                           ; 1 bytes @ 0x2
   919  0072                     	ds	1
   920  0073                     ??_backlight:	
   921  0073                     ??_pulseEnable:	
   922                           ; 1 bytes @ 0x3
   923                           
   924                           
   925                           ; 1 bytes @ 0x3
   926  0073                     	ds	1
   927  0074                     pulseEnable@data:	
   928  0074                     ___lmul@multiplicand:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ___lldiv@dividend:	
   932                           ; 4 bytes @ 0x4
   933                           
   934                           
   935                           ; 4 bytes @ 0x4
   936  0074                     	ds	1
   937  0075                     ??_write4bits:	
   938  0075                     write4bits@value:	
   939                           ; 1 bytes @ 0x5
   940                           
   941                           
   942                           ; 1 bytes @ 0x5
   943  0075                     	ds	1
   944  0076                     ?_send:	
   945  0076                     send@mode:	
   946                           ; 1 bytes @ 0x6
   947                           
   948                           
   949                           ; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0077                     ??_send:	
   952                           
   953                           ; 1 bytes @ 0x7
   954  0077                     	ds	1
   955  0078                     ??___lmul:	
   956  0078                     ??___lldiv:	
   957                           ; 1 bytes @ 0x8
   958                           
   959                           
   960                           ; 1 bytes @ 0x8
   961  0078                     	ds	1
   962  0079                     send@highnib:	
   963  0079                     ___lmul@product:	
   964                           ; 1 bytes @ 0x9
   965                           
   966  0079                     ___lldiv@quotient:	
   967                           ; 4 bytes @ 0x9
   968                           
   969                           
   970                           ; 4 bytes @ 0x9
   971  0079                     	ds	1
   972  007A                     send@lownib:	
   973                           
   974                           ; 1 bytes @ 0xA
   975  007A                     	ds	1
   976  007B                     send@value:	
   977                           
   978                           ; 1 bytes @ 0xB
   979  007B                     	ds	1
   980  007C                     ??_command:	
   981  007C                     ??_write:	
   982                           ; 1 bytes @ 0xC
   983                           
   984  007C                     command@value:	
   985                           ; 1 bytes @ 0xC
   986                           
   987  007C                     write@value:	
   988                           ; 1 bytes @ 0xC
   989                           
   990                           
   991                           ; 1 bytes @ 0xC
   992  007C                     	ds	1
   993  007D                     ??_noCursor:	
   994  007D                     ??_writeStr:	
   995                           ; 1 bytes @ 0xD
   996                           
   997  007D                     ??_writeChar:	
   998                           ; 1 bytes @ 0xD
   999                           
  1000  007D                     ??___awmod:	
  1001                           ; 1 bytes @ 0xD
  1002                           
  1003  007D                     writeChar@value:	
  1004                           ; 1 bytes @ 0xD
  1005                           
  1006  007D                     ___lldiv@counter:	
  1007                           ; 1 bytes @ 0xD
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0xD
  1011  007D                     	ds	1
  1012                           
  1013                           	psect	cstackBANK0
  1014  0020                     __pcstackBANK0:	
  1015  0020                     ?_I2C_Master_Init:	
  1016  0020                     ?_Display_Begin:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0020                     ??_clear:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0020                     ?_setCursor:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0020                     ?_rand:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0020                     writeStr@message:	
  1029                           ; 2 bytes @ 0x0
  1030                           
  1031  0020                     Display_Begin@addr:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0020                     setCursor@col:	
  1035                           ; 2 bytes @ 0x0
  1036                           
  1037  0020                     I2C_Master_Init@c:	
  1038                           ; 2 bytes @ 0x0
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x0
  1042  0020                     	ds	1
  1043  0021                     writeStr@message_ptr:	
  1044                           
  1045                           ; 1 bytes @ 0x1
  1046  0021                     	ds	1
  1047  0022                     ??_rand:	
  1048  0022                     Display_Begin@cols:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051  0022                     setCursor@row:	
  1052                           ; 2 bytes @ 0x2
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x2
  1056  0022                     	ds	2
  1057  0024                     ??_I2C_Master_Init:	
  1058  0024                     ??_setCursor:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0024                     Display_Begin@rows:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 2 bytes @ 0x4
  1066  0024                     	ds	2
  1067  0026                     ??_Display_Begin:	
  1068                           
  1069                           ; 1 bytes @ 0x6
  1070  0026                     	ds	1
  1071  0027                     ?___awmod:	
  1072  0027                     ___awmod@divisor:	
  1073                           ; 2 bytes @ 0x7
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x7
  1077  0027                     	ds	1
  1078  0028                     setCursor@row_offsets:	
  1079                           
  1080                           ; 8 bytes @ 0x8
  1081  0028                     	ds	1
  1082  0029                     ___awmod@dividend:	
  1083                           
  1084                           ; 2 bytes @ 0x9
  1085  0029                     	ds	2
  1086  002B                     ___awmod@counter:	
  1087                           
  1088                           ; 1 bytes @ 0xB
  1089  002B                     	ds	1
  1090  002C                     ___awmod@sign:	
  1091                           
  1092                           ; 1 bytes @ 0xC
  1093  002C                     	ds	4
  1094  0030                     ??_main:	
  1095                           
  1096                           ; 1 bytes @ 0x10
  1097  0030                     	ds	3
  1098  0033                     main@max:	
  1099                           
  1100                           ; 2 bytes @ 0x13
  1101  0033                     	ds	2
  1102  0035                     main@timer0:	
  1103                           
  1104                           ; 2 bytes @ 0x15
  1105  0035                     	ds	2
  1106  0037                     main@min:	
  1107                           
  1108                           ; 2 bytes @ 0x17
  1109  0037                     	ds	2
  1110  0039                     main@scaled:	
  1111                           
  1112                           ; 2 bytes @ 0x19
  1113  0039                     	ds	2
  1114  003B                     main@hits:	
  1115                           
  1116                           ; 2 bytes @ 0x1B
  1117  003B                     	ds	2
  1118                           
  1119                           	psect	maintext
  1120  067A                     __pmaintext:	
  1121 ;;
  1122 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1123 ;;
  1124 ;; *************** function _main *****************
  1125 ;; Defined at:
  1126 ;;		line 17 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  min             2   23[BANK0 ] int 
  1131 ;;  max             2   19[BANK0 ] int 
  1132 ;;  hits            2   27[BANK0 ] unsigned int 
  1133 ;;  scaled          2   25[BANK0 ] unsigned int 
  1134 ;;  timer0          2   21[BANK0 ] unsigned int 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : B00/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0      10       0       0       0
  1146 ;;      Temps:          0       3       0       0       0
  1147 ;;      Totals:         0      13       0       0       0
  1148 ;;Total ram usage:       13 bytes
  1149 ;; Hardware stack levels required when called:    8
  1150 ;; This function calls:
  1151 ;;		_Display_Begin
  1152 ;;		_I2C_Master_Init
  1153 ;;		___awmod
  1154 ;;		_backlight
  1155 ;;		_clear
  1156 ;;		_noCursor
  1157 ;;		_rand
  1158 ;;		_setCursor
  1159 ;;		_writeChar
  1160 ;;		_writeStr
  1161 ;; This function is called by:
  1162 ;;		Startup code after reset
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           
  1167                           ;psect for function _main
  1168  067A                     _main:	
  1169                           
  1170                           ;main.c: 20: TRISDbits.TRISD6 = 0x00;
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1174  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1175  067B  1303               	bcf	3,6	;RP1=0, select bank1
  1176  067C  1308               	bcf	8,6	;volatile
  1177                           
  1178                           ;main.c: 21: TRISDbits.TRISD5 = 0x01;
  1179  067D  1688               	bsf	8,5	;volatile
  1180                           
  1181                           ;main.c: 22: PORTDbits.RD6 = 0x0;
  1182  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1183  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0680  1308               	bcf	8,6	;volatile
  1185                           
  1186                           ;main.c: 25: I2C_Master_Init(100000);
  1187  0681  3000               	movlw	0
  1188  0682  00A3               	movwf	I2C_Master_Init@c+3
  1189  0683  3001               	movlw	1
  1190  0684  00A2               	movwf	I2C_Master_Init@c+2
  1191  0685  3086               	movlw	134
  1192  0686  00A1               	movwf	I2C_Master_Init@c+1
  1193  0687  30A0               	movlw	160
  1194  0688  00A0               	movwf	I2C_Master_Init@c
  1195  0689  120A  118A  2453  120A  118A  	fcall	_I2C_Master_Init
  1196                           
  1197                           ;main.c: 26: _delay((unsigned long)((100)*(16000000/4000.0)));
  1198  068E  3003               	movlw	3
  1199  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0691  00B2               	movwf	??_main+2
  1202  0692  3008               	movlw	8
  1203  0693  00B1               	movwf	??_main+1
  1204  0694  3076               	movlw	118
  1205  0695  00B0               	movwf	??_main
  1206  0696                     u1317:	
  1207  0696  0BB0               	decfsz	??_main,f
  1208  0697  2E96               	goto	u1317
  1209  0698  0BB1               	decfsz	??_main+1,f
  1210  0699  2E96               	goto	u1317
  1211  069A  0BB2               	decfsz	??_main+2,f
  1212  069B  2E96               	goto	u1317
  1213  069C  0000               	nop
  1214                           
  1215                           ;main.c: 29: Display_Begin(0x40, 16, 2);
  1216  069D  3040               	movlw	64
  1217  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1218  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1219  06A0  00A0               	movwf	Display_Begin@addr
  1220  06A1  3000               	movlw	0
  1221  06A2  00A1               	movwf	Display_Begin@addr+1
  1222  06A3  3010               	movlw	16
  1223  06A4  00A2               	movwf	Display_Begin@cols
  1224  06A5  3000               	movlw	0
  1225  06A6  00A3               	movwf	Display_Begin@cols+1
  1226  06A7  3002               	movlw	2
  1227  06A8  00A4               	movwf	Display_Begin@rows
  1228  06A9  3000               	movlw	0
  1229  06AA  00A5               	movwf	Display_Begin@rows+1
  1230  06AB  120A  118A  25F7  120A  118A  	fcall	_Display_Begin
  1231                           
  1232                           ;main.c: 30: backlight();
  1233  06B0  120A  118A  2368  120A  118A  	fcall	_backlight
  1234                           
  1235                           ;main.c: 31: noCursor();
  1236  06B5  120A  118A  2373  120A  118A  	fcall	_noCursor
  1237                           
  1238                           ;main.c: 32: clear();
  1239  06BA  120A  118A  239E  120A  118A  	fcall	_clear
  1240                           
  1241                           ;main.c: 33: setCursor(0,0);
  1242  06BF  3000               	movlw	0
  1243  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1244  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1245  06C2  00A0               	movwf	setCursor@col
  1246  06C3  00A1               	movwf	setCursor@col+1
  1247  06C4  3000               	movlw	0
  1248  06C5  00A2               	movwf	setCursor@row
  1249  06C6  00A3               	movwf	setCursor@row+1
  1250  06C7  120A  118A  248A  120A  118A  	fcall	_setCursor
  1251                           
  1252                           ;main.c: 34: writeStr("  Projeto 2017");
  1253  06CC  3094               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1254  06CD  120A  118A  242F  120A  118A  	fcall	_writeStr
  1255                           
  1256                           ;main.c: 35: setCursor(0,1);
  1257  06D2  3000               	movlw	0
  1258  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1259  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1260  06D5  00A0               	movwf	setCursor@col
  1261  06D6  00A1               	movwf	setCursor@col+1
  1262  06D7  3001               	movlw	1
  1263  06D8  00A2               	movwf	setCursor@row
  1264  06D9  3000               	movlw	0
  1265  06DA  00A3               	movwf	setCursor@row+1
  1266  06DB  120A  118A  248A  120A  118A  	fcall	_setCursor
  1267                           
  1268                           ;main.c: 36: writeStr("Henrique & Caio");
  1269  06E0  3084               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1270  06E1  120A  118A  242F  120A  118A  	fcall	_writeStr
  1271                           
  1272                           ;main.c: 37: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1273  06E6  3015               	movlw	21
  1274  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1275  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1276  06E9  00B2               	movwf	??_main+2
  1277  06EA  304B               	movlw	75
  1278  06EB  00B1               	movwf	??_main+1
  1279  06EC  30BD               	movlw	189
  1280  06ED  00B0               	movwf	??_main
  1281  06EE                     u1327:	
  1282  06EE  0BB0               	decfsz	??_main,f
  1283  06EF  2EEE               	goto	u1327
  1284  06F0  0BB1               	decfsz	??_main+1,f
  1285  06F1  2EEE               	goto	u1327
  1286  06F2  0BB2               	decfsz	??_main+2,f
  1287  06F3  2EEE               	goto	u1327
  1288  06F4  2EF5               	nop2
  1289                           
  1290                           ;main.c: 39: unsigned int hits = 0;
  1291  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1292  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1293  06F7  01BB               	clrf	main@hits
  1294  06F8  01BC               	clrf	main@hits+1
  1295                           
  1296                           ;main.c: 40: unsigned int timer0 = 0;
  1297  06F9  01B5               	clrf	main@timer0
  1298  06FA  01B6               	clrf	main@timer0+1
  1299                           
  1300                           ;main.c: 41: unsigned int scaled = 0;
  1301  06FB  01B9               	clrf	main@scaled
  1302  06FC  01BA               	clrf	main@scaled+1
  1303                           
  1304                           ;main.c: 43: clear();
  1305  06FD  120A  118A  239E  120A  118A  	fcall	_clear
  1306  0702                     l1748:	
  1307                           ;main.c: 45: while(1)
  1308                           
  1309                           
  1310                           ;main.c: 46: {
  1311                           ;main.c: 50: PORTDbits.RD6 ^= (1 << 0);
  1312  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0704  0E08               	swapf	8,w	;volatile
  1315  0705  00B0               	movwf	??_main
  1316  0706  0CB0               	rrf	??_main,f
  1317  0707  0C30               	rrf	??_main,w
  1318  0708  3901               	andlw	1
  1319  0709  00B0               	movwf	??_main
  1320  070A  3001               	movlw	1
  1321  070B  06B0               	xorwf	??_main,f
  1322  070C  0EB0               	swapf	??_main,f
  1323  070D  0DB0               	rlf	??_main,f
  1324  070E  0DB0               	rlf	??_main,f
  1325  070F  0808               	movf	8,w	;volatile
  1326  0710  0630               	xorwf	??_main,w
  1327  0711  39BF               	andlw	-65
  1328  0712  0630               	xorwf	??_main,w
  1329  0713  0088               	movwf	8	;volatile
  1330                           
  1331                           ;main.c: 53: if(timer0 >= (100*15))
  1332  0714  3005               	movlw	5
  1333  0715  0236               	subwf	main@timer0+1,w
  1334  0716  30DC               	movlw	220
  1335  0717  1903               	skipnz
  1336  0718  0235               	subwf	main@timer0,w
  1337  0719  1C03               	skipc
  1338  071A  2F69               	goto	l1768
  1339                           
  1340                           ;main.c: 54: {
  1341                           ;main.c: 55: clear();
  1342  071B  120A  118A  239E  120A  118A  	fcall	_clear
  1343                           
  1344                           ;main.c: 57: int max = 16-1;
  1345  0720  300F               	movlw	15
  1346  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0723  00B3               	movwf	main@max
  1349  0724  3000               	movlw	0
  1350  0725  00B4               	movwf	main@max+1
  1351                           
  1352                           ;main.c: 58: int min = 0;
  1353  0726  01B7               	clrf	main@min
  1354  0727  01B8               	clrf	main@min+1
  1355                           
  1356                           ;main.c: 59: scaled = (unsigned int)(rand() % (max-min)) + min;
  1357  0728  0937               	comf	main@min,w
  1358  0729  00B0               	movwf	??_main
  1359  072A  0938               	comf	main@min+1,w
  1360  072B  00B1               	movwf	??_main+1
  1361  072C  0AB0               	incf	??_main,f
  1362  072D  1903               	skipnz
  1363  072E  0AB1               	incf	??_main+1,f
  1364  072F  0833               	movf	main@max,w
  1365  0730  0730               	addwf	??_main,w
  1366  0731  00A7               	movwf	___awmod@divisor
  1367  0732  0834               	movf	main@max+1,w
  1368  0733  1803               	skipnc
  1369  0734  0A34               	incf	main@max+1,w
  1370  0735  0731               	addwf	??_main+1,w
  1371  0736  00A8               	movwf	___awmod@divisor+1
  1372  0737  120A  118A  2505  120A  118A  	fcall	_rand
  1373  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1374  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1375  073E  0821               	movf	?_rand+1,w
  1376  073F  00AA               	movwf	___awmod@dividend+1
  1377  0740  0820               	movf	?_rand,w
  1378  0741  00A9               	movwf	___awmod@dividend
  1379  0742  120A  118A  254C  120A  118A  	fcall	___awmod
  1380  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0749  0837               	movf	main@min,w
  1383  074A  0727               	addwf	?___awmod,w
  1384  074B  00B9               	movwf	main@scaled
  1385  074C  0838               	movf	main@min+1,w
  1386  074D  1803               	skipnc
  1387  074E  0A38               	incf	main@min+1,w
  1388  074F  0728               	addwf	?___awmod+1,w
  1389  0750  00BA               	movwf	main@scaled+1
  1390                           
  1391                           ;main.c: 60: setCursor(scaled,0);
  1392  0751  083A               	movf	main@scaled+1,w
  1393  0752  00A1               	movwf	setCursor@col+1
  1394  0753  0839               	movf	main@scaled,w
  1395  0754  00A0               	movwf	setCursor@col
  1396  0755  3000               	movlw	0
  1397  0756  00A2               	movwf	setCursor@row
  1398  0757  00A3               	movwf	setCursor@row+1
  1399  0758  120A  118A  248A  120A  118A  	fcall	_setCursor
  1400                           
  1401                           ;main.c: 61: writeChar('x');
  1402  075D  3078               	movlw	120
  1403  075E  120A  118A  233C  120A  118A  	fcall	_writeChar
  1404                           
  1405                           ;main.c: 62: timer0 = 0;
  1406  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0765  01B5               	clrf	main@timer0
  1409  0766  01B6               	clrf	main@timer0+1
  1410                           
  1411                           ;main.c: 63: hits=0;
  1412  0767  01BB               	clrf	main@hits
  1413  0768  01BC               	clrf	main@hits+1
  1414  0769                     l1768:	
  1415                           
  1416                           ;main.c: 64: }
  1417                           ;main.c: 67: if(!PORTDbits.RD5)
  1418  0769  1A88               	btfsc	8,5	;volatile
  1419  076A  2F86               	goto	l1776
  1420                           
  1421                           ;main.c: 68: {
  1422                           ;main.c: 69: setCursor(hits,1);
  1423  076B  083C               	movf	main@hits+1,w
  1424  076C  00A1               	movwf	setCursor@col+1
  1425  076D  083B               	movf	main@hits,w
  1426  076E  00A0               	movwf	setCursor@col
  1427  076F  3001               	movlw	1
  1428  0770  00A2               	movwf	setCursor@row
  1429  0771  3000               	movlw	0
  1430  0772  00A3               	movwf	setCursor@row+1
  1431  0773  120A  118A  248A  120A  118A  	fcall	_setCursor
  1432                           
  1433                           ;main.c: 70: writeChar('o');
  1434  0778  306F               	movlw	111
  1435  0779  120A  118A  233C  120A  118A  	fcall	_writeChar
  1436                           
  1437                           ;main.c: 71: hits++;
  1438  077E  3001               	movlw	1
  1439  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0781  07BB               	addwf	main@hits,f
  1442  0782  1803               	skipnc
  1443  0783  0ABC               	incf	main@hits+1,f
  1444  0784  3000               	movlw	0
  1445  0785  07BC               	addwf	main@hits+1,f
  1446  0786                     l1776:	
  1447                           
  1448                           ;main.c: 72: }
  1449                           ;main.c: 74: if((scaled == hits) && ((scaled != 0) && (hits != 0)))
  1450  0786  083C               	movf	main@hits+1,w
  1451  0787  063A               	xorwf	main@scaled+1,w
  1452  0788  1D03               	skipz
  1453  0789  2F8C               	goto	u1035
  1454  078A  083B               	movf	main@hits,w
  1455  078B  0639               	xorwf	main@scaled,w
  1456  078C                     u1035:	
  1457  078C  1D03               	skipz
  1458  078D  2FC6               	goto	l32
  1459  078E  0839               	movf	main@scaled,w
  1460  078F  043A               	iorwf	main@scaled+1,w
  1461  0790  1903               	btfsc	3,2
  1462  0791  2FC6               	goto	l32
  1463  0792  083B               	movf	main@hits,w
  1464  0793  043C               	iorwf	main@hits+1,w
  1465  0794  1903               	btfsc	3,2
  1466  0795  2FC6               	goto	l32
  1467                           
  1468                           ;main.c: 75: {
  1469                           ;main.c: 76: clear();
  1470  0796  120A  118A  239E  120A  118A  	fcall	_clear
  1471                           
  1472                           ;main.c: 77: hits=0;
  1473  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1474  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1475  079D  01BB               	clrf	main@hits
  1476  079E  01BC               	clrf	main@hits+1
  1477                           
  1478                           ;main.c: 78: timer0=0;
  1479  079F  01B5               	clrf	main@timer0
  1480  07A0  01B6               	clrf	main@timer0+1
  1481                           
  1482                           ;main.c: 79: setCursor(0,0);
  1483  07A1  3000               	movlw	0
  1484  07A2  00A0               	movwf	setCursor@col
  1485  07A3  00A1               	movwf	setCursor@col+1
  1486  07A4  3000               	movlw	0
  1487  07A5  00A2               	movwf	setCursor@row
  1488  07A6  00A3               	movwf	setCursor@row+1
  1489  07A7  120A  118A  248A  120A  118A  	fcall	_setCursor
  1490                           
  1491                           ;main.c: 80: writeStr("Ganhou o/o/");
  1492  07AC  30B0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1493  07AD  120A  118A  242F  120A  118A  	fcall	_writeStr
  1494                           
  1495                           ;main.c: 81: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1496  07B2  3029               	movlw	41
  1497  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1498  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1499  07B5  00B2               	movwf	??_main+2
  1500  07B6  3096               	movlw	150
  1501  07B7  00B1               	movwf	??_main+1
  1502  07B8  307E               	movlw	126
  1503  07B9  00B0               	movwf	??_main
  1504  07BA                     u1337:	
  1505  07BA  0BB0               	decfsz	??_main,f
  1506  07BB  2FBA               	goto	u1337
  1507  07BC  0BB1               	decfsz	??_main+1,f
  1508  07BD  2FBA               	goto	u1337
  1509  07BE  0BB2               	decfsz	??_main+2,f
  1510  07BF  2FBA               	goto	u1337
  1511  07C0  0000               	nop
  1512                           
  1513                           ;main.c: 82: clear();
  1514  07C1  120A  118A  239E  120A  118A  	fcall	_clear
  1515  07C6                     l32:	
  1516                           
  1517                           ;main.c: 83: }
  1518                           ;main.c: 85: if(hits >= 16)
  1519  07C6  3000               	movlw	0
  1520  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1521  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1522  07C9  023C               	subwf	main@hits+1,w
  1523  07CA  3010               	movlw	16
  1524  07CB  1903               	skipnz
  1525  07CC  023B               	subwf	main@hits,w
  1526  07CD  1C03               	skipc
  1527  07CE  2FD1               	goto	l1798
  1528                           
  1529                           ;main.c: 86: {
  1530                           ;main.c: 87: hits=0;
  1531  07CF  01BB               	clrf	main@hits
  1532  07D0  01BC               	clrf	main@hits+1
  1533  07D1                     l1798:	
  1534                           
  1535                           ;main.c: 88: }
  1536                           ;main.c: 90: _delay((unsigned long)((100)*(16000000/4000.0)));
  1537  07D1  3003               	movlw	3
  1538  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1539  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1540  07D4  00B2               	movwf	??_main+2
  1541  07D5  3008               	movlw	8
  1542  07D6  00B1               	movwf	??_main+1
  1543  07D7  3076               	movlw	118
  1544  07D8  00B0               	movwf	??_main
  1545  07D9                     u1347:	
  1546  07D9  0BB0               	decfsz	??_main,f
  1547  07DA  2FD9               	goto	u1347
  1548  07DB  0BB1               	decfsz	??_main+1,f
  1549  07DC  2FD9               	goto	u1347
  1550  07DD  0BB2               	decfsz	??_main+2,f
  1551  07DE  2FD9               	goto	u1347
  1552  07DF  0000               	nop
  1553                           
  1554                           ;main.c: 91: timer0 += 100;
  1555  07E0  3064               	movlw	100
  1556  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1557  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1558  07E3  07B5               	addwf	main@timer0,f
  1559  07E4  1803               	skipnc
  1560  07E5  0AB6               	incf	main@timer0+1,f
  1561  07E6  3000               	movlw	0
  1562  07E7  07B6               	addwf	main@timer0+1,f
  1563  07E8  2F02               	goto	l1748
  1564  07E9                     __end_of_main:	
  1565                           ;main.c: 92: }
  1566                           ;main.c: 93: return;
  1567                           
  1568                           
  1569                           	psect	text1
  1570  042F                     __ptext1:	
  1571 ;; *************** function _writeStr *****************
  1572 ;; Defined at:
  1573 ;;		line 247 in file "display.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  message         1    wreg     PTR const unsigned char 
  1576 ;;		 -> STR_3(12), STR_2(16), STR_1(15), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  message         1    0[BANK0 ] PTR const unsigned char 
  1579 ;;		 -> STR_3(12), STR_2(16), STR_1(15), 
  1580 ;;  message_ptr     1    1[BANK0 ] PTR unsigned char 
  1581 ;;		 -> STR_3(12), STR_2(16), STR_1(15), 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         0       2       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         1       2       0       0       0
  1595 ;;Total ram usage:        3 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    7
  1598 ;; This function calls:
  1599 ;;		_write
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _writeStr
  1607  042F                     _writeStr:	
  1608                           
  1609                           ;incstack = 0
  1610 ;; using string table level
  1611                           ; Regs used in _writeStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1612                           ;writeStr@message stored from wreg
  1613  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0431  00A0               	movwf	writeStr@message
  1616                           
  1617                           ;display.c: 249: unsigned char *message_ptr = (unsigned char *) message;
  1618  0432  0820               	movf	writeStr@message,w
  1619  0433  00FD               	movwf	??_writeStr
  1620  0434  087D               	movf	??_writeStr,w
  1621  0435  00A1               	movwf	writeStr@message_ptr
  1622  0436                     l1634:	
  1623                           ;display.c: 251: while (*message_ptr)
  1624                           
  1625  0436  0821               	movf	writeStr@message_ptr,w
  1626  0437  0084               	movwf	4
  1627  0438  120A  118A  2003  120A  118A  	fcall	stringdir
  1628  043D  3A00               	xorlw	0
  1629  043E  1903               	btfsc	3,2
  1630  043F  0008               	return
  1631                           
  1632                           ;display.c: 252: write((unsigned char) (*message_ptr++));
  1633  0440  0821               	movf	writeStr@message_ptr,w
  1634  0441  0084               	movwf	4
  1635  0442  120A  118A  2003  120A  118A  	fcall	stringdir
  1636  0447  120A  118A  2357  120A  118A  	fcall	_write
  1637  044C  3001               	movlw	1
  1638  044D  00FD               	movwf	??_writeStr
  1639  044E  087D               	movf	??_writeStr,w
  1640  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0451  07A1               	addwf	writeStr@message_ptr,f
  1643  0452  2C36               	goto	l1634
  1644  0453                     __end_of_writeStr:	
  1645                           
  1646                           	psect	text2
  1647  033C                     __ptext2:	
  1648 ;; *************** function _writeChar *****************
  1649 ;; Defined at:
  1650 ;;		line 242 in file "display.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  value           1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  value           1   13[COMMON] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         1       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         1       0       0       0       0
  1668 ;;Total ram usage:        1 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    7
  1671 ;; This function calls:
  1672 ;;		_write
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _writeChar
  1680  033C                     _writeChar:	
  1681                           
  1682                           ;incstack = 0
  1683                           ; Regs used in _writeChar: [wreg+status,2+status,0+pclath+cstack]
  1684                           ;writeChar@value stored from wreg
  1685  033C  00FD               	movwf	writeChar@value
  1686                           
  1687                           ;display.c: 244: write((unsigned char)value);
  1688  033D  087D               	movf	writeChar@value,w
  1689  033E  120A  118A  2357   	fcall	_write
  1690  0341  0008               	return
  1691  0342                     __end_of_writeChar:	
  1692                           
  1693                           	psect	text3
  1694  0357                     __ptext3:	
  1695 ;; *************** function _write *****************
  1696 ;; Defined at:
  1697 ;;		line 119 in file "display.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  value           1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  value           1   12[COMMON] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         1       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         1       0       0       0       0
  1715 ;;Total ram usage:        1 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    6
  1718 ;; This function calls:
  1719 ;;		_send
  1720 ;; This function is called by:
  1721 ;;		_writeChar
  1722 ;;		_writeStr
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _write
  1728  0357                     _write:	
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _write: [wreg+status,2+status,0+pclath+cstack]
  1732                           ;write@value stored from wreg
  1733  0357  00FC               	movwf	write@value
  1734                           
  1735                           ;display.c: 121: send(value, 0b00000001);
  1736  0358  01F6               	clrf	send@mode
  1737  0359  0AF6               	incf	send@mode,f
  1738  035A  087C               	movf	write@value,w
  1739  035B  120A  118A  240C   	fcall	_send
  1740  035E  0008               	return
  1741  035F                     __end_of_write:	
  1742                           
  1743                           	psect	text4
  1744  048A                     __ptext4:	
  1745 ;; *************** function _setCursor *****************
  1746 ;; Defined at:
  1747 ;;		line 143 in file "display.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  col             2    0[BANK0 ] int 
  1750 ;;  row             2    2[BANK0 ] int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  row_offsets     8    8[BANK0 ] int [4]
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       4       0       0       0
  1763 ;;      Locals:         0       8       0       0       0
  1764 ;;      Temps:          0       4       0       0       0
  1765 ;;      Totals:         0      16       0       0       0
  1766 ;;Total ram usage:       16 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    7
  1769 ;; This function calls:
  1770 ;;		_command
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _setCursor
  1778  048A                     _setCursor:	
  1779                           
  1780                           ;display.c: 145: int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1784  048A  3028               	movlw	setCursor@row_offsets& (0+255)
  1785  048B  0084               	movwf	4
  1786  048C  303D               	movlw	low setCursor@F1735
  1787  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1788  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1789  048F  00A4               	movwf	??_setCursor
  1790  0490  0804               	movf	4,w
  1791  0491  00A5               	movwf	??_setCursor+1
  1792  0492  3008               	movlw	8
  1793  0493  00A6               	movwf	??_setCursor+2
  1794  0494                     u850:	
  1795  0494  0824               	movf	??_setCursor,w
  1796  0495  0084               	movwf	4
  1797  0496  1383               	bcf	3,7	;select IRP bank0
  1798  0497  0800               	movf	0,w
  1799  0498  00A7               	movwf	??_setCursor+3
  1800  0499  0AA4               	incf	??_setCursor,f
  1801  049A  0825               	movf	??_setCursor+1,w
  1802  049B  0084               	movwf	4
  1803  049C  0827               	movf	??_setCursor+3,w
  1804  049D  0080               	movwf	0
  1805  049E  0AA5               	incf	??_setCursor+1,f
  1806  049F  0BA6               	decfsz	??_setCursor+2,f
  1807  04A0  2C94               	goto	u850
  1808                           
  1809                           ;display.c: 146: if (row > _rows) {
  1810  04A1  084C               	movf	__rows+1,w
  1811  04A2  3A80               	xorlw	128
  1812  04A3  00A4               	movwf	??_setCursor
  1813  04A4  0823               	movf	setCursor@row+1,w
  1814  04A5  3A80               	xorlw	128
  1815  04A6  0224               	subwf	??_setCursor,w
  1816  04A7  1D03               	skipz
  1817  04A8  2CAB               	goto	u865
  1818  04A9  0822               	movf	setCursor@row,w
  1819  04AA  024B               	subwf	__rows,w
  1820  04AB                     u865:	
  1821  04AB  1803               	skipnc
  1822  04AC  2CB7               	goto	l1626
  1823                           
  1824                           ;display.c: 147: row = _rows-1;
  1825  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1826  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1827  04AF  084B               	movf	__rows,w
  1828  04B0  3EFF               	addlw	255
  1829  04B1  00A2               	movwf	setCursor@row
  1830  04B2  084C               	movf	__rows+1,w
  1831  04B3  1803               	skipnc
  1832  04B4  3E01               	addlw	1
  1833  04B5  3EFF               	addlw	255
  1834  04B6  00A3               	movwf	setCursor@row+1
  1835  04B7                     l1626:	
  1836                           
  1837                           ;display.c: 148: }
  1838                           ;display.c: 149: command(0x80 | (col + row_offsets[row]));
  1839  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1840  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1841  04B9  0822               	movf	setCursor@row,w
  1842  04BA  00A4               	movwf	??_setCursor
  1843  04BB  0724               	addwf	??_setCursor,w
  1844  04BC  3E28               	addlw	(low (setCursor@row_offsets| 0))& (0+255)
  1845  04BD  0084               	movwf	4
  1846  04BE  0820               	movf	setCursor@col,w
  1847  04BF  1383               	bcf	3,7	;select IRP bank0
  1848  04C0  0700               	addwf	0,w
  1849  04C1  3880               	iorlw	128
  1850  04C2  120A  118A  2350   	fcall	_command
  1851  04C5  0008               	return
  1852  04C6                     __end_of_setCursor:	
  1853                           
  1854                           	psect	text5
  1855  0505                     __ptext5:	
  1856 ;; *************** function _rand *****************
  1857 ;; Defined at:
  1858 ;;		line 12 in file "/opt/microchip/xc8/v1.41/sources/common/rand.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    0[BANK0 ] int 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       2       0       0       0
  1873 ;;      Locals:         0       0       0       0       0
  1874 ;;      Temps:          0       5       0       0       0
  1875 ;;      Totals:         0       7       0       0       0
  1876 ;;Total ram usage:        7 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    1
  1879 ;; This function calls:
  1880 ;;		___lmul
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _rand
  1888  0505                     _rand:	
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1892  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0507  0848               	movf	_randx+3,w
  1895  0508  00F3               	movwf	___lmul@multiplier+3
  1896  0509  0847               	movf	_randx+2,w
  1897  050A  00F2               	movwf	___lmul@multiplier+2
  1898  050B  0846               	movf	_randx+1,w
  1899  050C  00F1               	movwf	___lmul@multiplier+1
  1900  050D  0845               	movf	_randx,w
  1901  050E  00F0               	movwf	___lmul@multiplier
  1902  050F  3041               	movlw	65
  1903  0510  00F7               	movwf	___lmul@multiplicand+3
  1904  0511  30C6               	movlw	198
  1905  0512  00F6               	movwf	___lmul@multiplicand+2
  1906  0513  304E               	movlw	78
  1907  0514  00F5               	movwf	___lmul@multiplicand+1
  1908  0515  306D               	movlw	109
  1909  0516  00F4               	movwf	___lmul@multiplicand
  1910  0517  120A  118A  24C6  120A  118A  	fcall	___lmul
  1911  051C  0873               	movf	?___lmul+3,w
  1912  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1913  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1914  051F  00C8               	movwf	_randx+3
  1915  0520  0872               	movf	?___lmul+2,w
  1916  0521  00C7               	movwf	_randx+2
  1917  0522  0871               	movf	?___lmul+1,w
  1918  0523  00C6               	movwf	_randx+1
  1919  0524  0870               	movf	?___lmul,w
  1920  0525  00C5               	movwf	_randx
  1921  0526  3039               	movlw	57
  1922  0527  07C5               	addwf	_randx,f
  1923  0528  3030               	movlw	48
  1924  0529  1803               	skipnc
  1925  052A  3031               	movlw	49
  1926  052B  07C6               	addwf	_randx+1,f
  1927  052C  3000               	movlw	0
  1928  052D  1803               	skipnc
  1929  052E  3001               	movlw	1
  1930  052F  07C7               	addwf	_randx+2,f
  1931  0530  3000               	movlw	0
  1932  0531  1803               	skipnc
  1933  0532  3001               	movlw	1
  1934  0533  07C8               	addwf	_randx+3,f
  1935  0534  0845               	movf	_randx,w
  1936  0535  00A2               	movwf	??_rand
  1937  0536  0846               	movf	_randx+1,w
  1938  0537  00A3               	movwf	??_rand+1
  1939  0538  0847               	movf	_randx+2,w
  1940  0539  00A4               	movwf	??_rand+2
  1941  053A  0848               	movf	_randx+3,w
  1942  053B  00A5               	movwf	??_rand+3
  1943  053C  3010               	movlw	16
  1944  053D  00A6               	movwf	??_rand+4
  1945  053E                     u885:	
  1946  053E  0D25               	rlf	??_rand+3,w
  1947  053F  0CA5               	rrf	??_rand+3,f
  1948  0540  0CA4               	rrf	??_rand+2,f
  1949  0541  0CA3               	rrf	??_rand+1,f
  1950  0542  0CA2               	rrf	??_rand,f
  1951  0543  0BA6               	decfsz	??_rand+4,f
  1952  0544  2D3E               	goto	u885
  1953  0545  30FF               	movlw	255
  1954  0546  0522               	andwf	??_rand,w
  1955  0547  00A0               	movwf	?_rand
  1956  0548  307F               	movlw	127
  1957  0549  0523               	andwf	??_rand+1,w
  1958  054A  00A1               	movwf	?_rand+1
  1959  054B  0008               	return
  1960  054C                     __end_of_rand:	
  1961                           
  1962                           	psect	text6
  1963  04C6                     __ptext6:	
  1964 ;; *************** function ___lmul *****************
  1965 ;; Defined at:
  1966 ;;		line 15 in file "/opt/microchip/xc8/v1.41/sources/common/Umul32.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  multiplier      4    0[COMMON] unsigned long 
  1969 ;;  multiplicand    4    4[COMMON] unsigned long 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  product         4    9[COMMON] unsigned long 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  4    0[COMMON] unsigned long 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         8       0       0       0       0
  1982 ;;      Locals:         4       0       0       0       0
  1983 ;;      Temps:          1       0       0       0       0
  1984 ;;      Totals:        13       0       0       0       0
  1985 ;;Total ram usage:       13 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_rand
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function ___lmul
  1996  04C6                     ___lmul:	
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2000  04C6  3000               	movlw	0
  2001  04C7  00FC               	movwf	___lmul@product+3
  2002  04C8  3000               	movlw	0
  2003  04C9  00FB               	movwf	___lmul@product+2
  2004  04CA  3000               	movlw	0
  2005  04CB  00FA               	movwf	___lmul@product+1
  2006  04CC  3000               	movlw	0
  2007  04CD  00F9               	movwf	___lmul@product
  2008  04CE                     l1532:	
  2009  04CE  1C70               	btfss	___lmul@multiplier,0
  2010  04CF  2CE4               	goto	l1536
  2011  04D0  0874               	movf	___lmul@multiplicand,w
  2012  04D1  07F9               	addwf	___lmul@product,f
  2013  04D2  0875               	movf	___lmul@multiplicand+1,w
  2014  04D3  1103               	clrz
  2015  04D4  1803               	skipnc
  2016  04D5  3E01               	addlw	1
  2017  04D6  1D03               	btfss	3,2
  2018  04D7  07FA               	addwf	___lmul@product+1,f
  2019  04D8  0876               	movf	___lmul@multiplicand+2,w
  2020  04D9  1103               	clrz
  2021  04DA  1803               	skipnc
  2022  04DB  3E01               	addlw	1
  2023  04DC  1D03               	btfss	3,2
  2024  04DD  07FB               	addwf	___lmul@product+2,f
  2025  04DE  0877               	movf	___lmul@multiplicand+3,w
  2026  04DF  1103               	clrz
  2027  04E0  1803               	skipnc
  2028  04E1  3E01               	addlw	1
  2029  04E2  1D03               	btfss	3,2
  2030  04E3  07FC               	addwf	___lmul@product+3,f
  2031  04E4                     l1536:	
  2032  04E4  3001               	movlw	1
  2033  04E5  00F8               	movwf	??___lmul
  2034  04E6                     u745:	
  2035  04E6  1003               	clrc
  2036  04E7  0DF4               	rlf	___lmul@multiplicand,f
  2037  04E8  0DF5               	rlf	___lmul@multiplicand+1,f
  2038  04E9  0DF6               	rlf	___lmul@multiplicand+2,f
  2039  04EA  0DF7               	rlf	___lmul@multiplicand+3,f
  2040  04EB  0BF8               	decfsz	??___lmul,f
  2041  04EC  2CE6               	goto	u745
  2042  04ED  3001               	movlw	1
  2043  04EE                     u755:	
  2044  04EE  1003               	clrc
  2045  04EF  0CF3               	rrf	___lmul@multiplier+3,f
  2046  04F0  0CF2               	rrf	___lmul@multiplier+2,f
  2047  04F1  0CF1               	rrf	___lmul@multiplier+1,f
  2048  04F2  0CF0               	rrf	___lmul@multiplier,f
  2049  04F3  3EFF               	addlw	-1
  2050  04F4  1D03               	skipz
  2051  04F5  2CEE               	goto	u755
  2052  04F6  0873               	movf	___lmul@multiplier+3,w
  2053  04F7  0472               	iorwf	___lmul@multiplier+2,w
  2054  04F8  0471               	iorwf	___lmul@multiplier+1,w
  2055  04F9  0470               	iorwf	___lmul@multiplier,w
  2056  04FA  1D03               	skipz
  2057  04FB  2CCE               	goto	l1532
  2058  04FC  087C               	movf	___lmul@product+3,w
  2059  04FD  00F3               	movwf	?___lmul+3
  2060  04FE  087B               	movf	___lmul@product+2,w
  2061  04FF  00F2               	movwf	?___lmul+2
  2062  0500  087A               	movf	___lmul@product+1,w
  2063  0501  00F1               	movwf	?___lmul+1
  2064  0502  0879               	movf	___lmul@product,w
  2065  0503  00F0               	movwf	?___lmul
  2066  0504  0008               	return
  2067  0505                     __end_of___lmul:	
  2068                           
  2069                           	psect	text7
  2070  0373                     __ptext7:	
  2071 ;; *************** function _noCursor *****************
  2072 ;; Defined at:
  2073 ;;		line 171 in file "display.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    7
  2094 ;; This function calls:
  2095 ;;		_command
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function _noCursor
  2103  0373                     _noCursor:	
  2104                           
  2105                           ;display.c: 173: _displaycontrol &= ~0x02;
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _noCursor: [wreg+status,2+status,0+pclath+cstack]
  2109  0373  30FD               	movlw	253
  2110  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0376  05D3               	andwf	__displaycontrol,f
  2113  0377  30FF               	movlw	255
  2114  0378  05D4               	andwf	__displaycontrol+1,f
  2115                           
  2116                           ;display.c: 174: command(0x08 | _displaycontrol);
  2117  0379  0853               	movf	__displaycontrol,w
  2118  037A  3808               	iorlw	8
  2119  037B  120A  118A  2350   	fcall	_command
  2120  037E  0008               	return
  2121  037F                     __end_of_noCursor:	
  2122                           
  2123                           	psect	text8
  2124  039E                     __ptext8:	
  2125 ;; *************** function _clear *****************
  2126 ;; Defined at:
  2127 ;;		line 128 in file "display.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0
  2143 ;;      Temps:          0       2       0       0       0
  2144 ;;      Totals:         0       2       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    7
  2148 ;; This function calls:
  2149 ;;		_command
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _clear
  2157  039E                     _clear:	
  2158                           
  2159                           ;display.c: 130: command(0x01);
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _clear: [wreg+status,2+status,0+pclath+cstack]
  2163  039E  3001               	movlw	1
  2164  039F  120A  118A  2350  120A  118A  	fcall	_command
  2165                           
  2166                           ;display.c: 131: _delay((unsigned long)((2000)*(16000000/4000000.0)));
  2167  03A4  300B               	movlw	11
  2168  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2169  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2170  03A7  00A1               	movwf	??_clear+1
  2171  03A8  3061               	movlw	97
  2172  03A9  00A0               	movwf	??_clear
  2173  03AA                     u1357:	
  2174  03AA  0BA0               	decfsz	??_clear,f
  2175  03AB  2BAA               	goto	u1357
  2176  03AC  0BA1               	decfsz	??_clear+1,f
  2177  03AD  2BAA               	goto	u1357
  2178  03AE  2BAF               	nop2
  2179  03AF  0008               	return
  2180  03B0                     __end_of_clear:	
  2181                           
  2182                           	psect	text9
  2183  0368                     __ptext9:	
  2184 ;; *************** function _backlight *****************
  2185 ;; Defined at:
  2186 ;;		line 230 in file "display.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		_expanderWrite
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;;		_setBacklight
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _backlight
  2217  0368                     _backlight:	
  2218                           
  2219                           ;display.c: 232: _backlightval=0x08;
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _backlight: [wreg+status,2+status,0+pclath+cstack]
  2223  0368  3008               	movlw	8
  2224  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2225  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2226  036B  00C9               	movwf	__backlightval
  2227  036C  3000               	movlw	0
  2228  036D  00CA               	movwf	__backlightval+1
  2229                           
  2230                           ;display.c: 233: expanderWrite(0);
  2231  036E  3000               	movlw	0
  2232  036F  120A  118A  23F3   	fcall	_expanderWrite
  2233  0372  0008               	return
  2234  0373                     __end_of_backlight:	
  2235                           
  2236                           	psect	text10
  2237  054C                     __ptext10:	
  2238 ;; *************** function ___awmod *****************
  2239 ;; Defined at:
  2240 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/awmod.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  divisor         2    7[BANK0 ] int 
  2243 ;;  dividend        2    9[BANK0 ] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  sign            1   12[BANK0 ] unsigned char 
  2246 ;;  counter         1   11[BANK0 ] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    7[BANK0 ] int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       4       0       0       0
  2257 ;;      Locals:         0       2       0       0       0
  2258 ;;      Temps:          1       0       0       0       0
  2259 ;;      Totals:         1       6       0       0       0
  2260 ;;Total ram usage:        7 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function ___awmod
  2271  054C                     ___awmod:	
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2275  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2276  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2277  054E  01AC               	clrf	___awmod@sign
  2278  054F  1FAA               	btfss	___awmod@dividend+1,7
  2279  0550  2D58               	goto	l1686
  2280  0551  09A9               	comf	___awmod@dividend,f
  2281  0552  09AA               	comf	___awmod@dividend+1,f
  2282  0553  0AA9               	incf	___awmod@dividend,f
  2283  0554  1903               	skipnz
  2284  0555  0AAA               	incf	___awmod@dividend+1,f
  2285  0556  01AC               	clrf	___awmod@sign
  2286  0557  0AAC               	incf	___awmod@sign,f
  2287  0558                     l1686:	
  2288  0558  1FA8               	btfss	___awmod@divisor+1,7
  2289  0559  2D5F               	goto	l1690
  2290  055A  09A7               	comf	___awmod@divisor,f
  2291  055B  09A8               	comf	___awmod@divisor+1,f
  2292  055C  0AA7               	incf	___awmod@divisor,f
  2293  055D  1903               	skipnz
  2294  055E  0AA8               	incf	___awmod@divisor+1,f
  2295  055F                     l1690:	
  2296  055F  0827               	movf	___awmod@divisor,w
  2297  0560  0428               	iorwf	___awmod@divisor+1,w
  2298  0561  1903               	btfsc	3,2
  2299  0562  2D8C               	goto	l1708
  2300  0563  01AB               	clrf	___awmod@counter
  2301  0564  0AAB               	incf	___awmod@counter,f
  2302  0565                     l1698:	
  2303  0565  1BA8               	btfsc	___awmod@divisor+1,7
  2304  0566  2D73               	goto	l1700
  2305  0567  3001               	movlw	1
  2306  0568                     u955:	
  2307  0568  1003               	clrc
  2308  0569  0DA7               	rlf	___awmod@divisor,f
  2309  056A  0DA8               	rlf	___awmod@divisor+1,f
  2310  056B  3EFF               	addlw	-1
  2311  056C  1D03               	skipz
  2312  056D  2D68               	goto	u955
  2313  056E  3001               	movlw	1
  2314  056F  00FD               	movwf	??___awmod
  2315  0570  087D               	movf	??___awmod,w
  2316  0571  07AB               	addwf	___awmod@counter,f
  2317  0572  2D65               	goto	l1698
  2318  0573                     l1700:	
  2319  0573  0828               	movf	___awmod@divisor+1,w
  2320  0574  022A               	subwf	___awmod@dividend+1,w
  2321  0575  1D03               	skipz
  2322  0576  2D79               	goto	u975
  2323  0577  0827               	movf	___awmod@divisor,w
  2324  0578  0229               	subwf	___awmod@dividend,w
  2325  0579                     u975:	
  2326  0579  1C03               	skipc
  2327  057A  2D81               	goto	l1704
  2328  057B  0827               	movf	___awmod@divisor,w
  2329  057C  02A9               	subwf	___awmod@dividend,f
  2330  057D  0828               	movf	___awmod@divisor+1,w
  2331  057E  1C03               	skipc
  2332  057F  03AA               	decf	___awmod@dividend+1,f
  2333  0580  02AA               	subwf	___awmod@dividend+1,f
  2334  0581                     l1704:	
  2335  0581  3001               	movlw	1
  2336  0582                     u985:	
  2337  0582  1003               	clrc
  2338  0583  0CA8               	rrf	___awmod@divisor+1,f
  2339  0584  0CA7               	rrf	___awmod@divisor,f
  2340  0585  3EFF               	addlw	-1
  2341  0586  1D03               	skipz
  2342  0587  2D82               	goto	u985
  2343  0588  3001               	movlw	1
  2344  0589  02AB               	subwf	___awmod@counter,f
  2345  058A  1D03               	btfss	3,2
  2346  058B  2D73               	goto	l1700
  2347  058C                     l1708:	
  2348  058C  082C               	movf	___awmod@sign,w
  2349  058D  1903               	btfsc	3,2
  2350  058E  2D94               	goto	l1712
  2351  058F  09A9               	comf	___awmod@dividend,f
  2352  0590  09AA               	comf	___awmod@dividend+1,f
  2353  0591  0AA9               	incf	___awmod@dividend,f
  2354  0592  1903               	skipnz
  2355  0593  0AAA               	incf	___awmod@dividend+1,f
  2356  0594                     l1712:	
  2357  0594  082A               	movf	___awmod@dividend+1,w
  2358  0595  00A8               	movwf	?___awmod+1
  2359  0596  0829               	movf	___awmod@dividend,w
  2360  0597  00A7               	movwf	?___awmod
  2361  0598  0008               	return
  2362  0599                     __end_of___awmod:	
  2363                           
  2364                           	psect	text11
  2365  0453                     __ptext11:	
  2366 ;; *************** function _I2C_Master_Init *****************
  2367 ;; Defined at:
  2368 ;;		line 5 in file "i2c.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  c               4    0[BANK0 ] const unsigned long 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       4       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       4       0       0       0
  2385 ;;      Totals:         0       8       0       0       0
  2386 ;;Total ram usage:        8 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    1
  2389 ;; This function calls:
  2390 ;;		___lldiv
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _I2C_Master_Init
  2398  0453                     _I2C_Master_Init:	
  2399                           
  2400                           ;i2c.c: 7: SSPCON = 0b00101000;
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2404  0453  3028               	movlw	40
  2405  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0456  0094               	movwf	20	;volatile
  2408                           
  2409                           ;i2c.c: 8: SSPCON2 = 0;
  2410  0457  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0458  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0459  0191               	clrf	17	;volatile
  2413                           
  2414                           ;i2c.c: 9: SSPADD = (16000000/(4*c))-1;
  2415  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2416  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2417  045C  0820               	movf	I2C_Master_Init@c,w
  2418  045D  00A4               	movwf	??_I2C_Master_Init
  2419  045E  0821               	movf	I2C_Master_Init@c+1,w
  2420  045F  00A5               	movwf	??_I2C_Master_Init+1
  2421  0460  0822               	movf	I2C_Master_Init@c+2,w
  2422  0461  00A6               	movwf	??_I2C_Master_Init+2
  2423  0462  0823               	movf	I2C_Master_Init@c+3,w
  2424  0463  00A7               	movwf	??_I2C_Master_Init+3
  2425  0464  3002               	movlw	2
  2426  0465                     u845:	
  2427  0465  1003               	clrc
  2428  0466  0DA4               	rlf	??_I2C_Master_Init,f
  2429  0467  0DA5               	rlf	??_I2C_Master_Init+1,f
  2430  0468  0DA6               	rlf	??_I2C_Master_Init+2,f
  2431  0469  0DA7               	rlf	??_I2C_Master_Init+3,f
  2432  046A  3EFF               	addlw	-1
  2433  046B  1D03               	skipz
  2434  046C  2C65               	goto	u845
  2435  046D  0827               	movf	??_I2C_Master_Init+3,w
  2436  046E  00F3               	movwf	___lldiv@divisor+3
  2437  046F  0826               	movf	??_I2C_Master_Init+2,w
  2438  0470  00F2               	movwf	___lldiv@divisor+2
  2439  0471  0825               	movf	??_I2C_Master_Init+1,w
  2440  0472  00F1               	movwf	___lldiv@divisor+1
  2441  0473  0824               	movf	??_I2C_Master_Init,w
  2442  0474  00F0               	movwf	___lldiv@divisor
  2443  0475  3000               	movlw	0
  2444  0476  00F7               	movwf	___lldiv@dividend+3
  2445  0477  30F4               	movlw	244
  2446  0478  00F6               	movwf	___lldiv@dividend+2
  2447  0479  3024               	movlw	36
  2448  047A  00F5               	movwf	___lldiv@dividend+1
  2449  047B  3000               	movlw	0
  2450  047C  00F4               	movwf	___lldiv@dividend
  2451  047D  120A  118A  2599   	fcall	___lldiv
  2452  0480  0870               	movf	?___lldiv,w
  2453  0481  3EFF               	addlw	255
  2454  0482  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0483  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0484  0093               	movwf	19	;volatile
  2457                           
  2458                           ;i2c.c: 10: SSPSTAT = 0x80;
  2459  0485  3080               	movlw	128
  2460  0486  0094               	movwf	20	;volatile
  2461                           
  2462                           ;i2c.c: 11: TRISC3 = 1;
  2463  0487  1587               	bsf	7,3	;volatile
  2464                           
  2465                           ;i2c.c: 12: TRISC4 = 1;
  2466  0488  1607               	bsf	7,4	;volatile
  2467  0489  0008               	return
  2468  048A                     __end_of_I2C_Master_Init:	
  2469                           
  2470                           	psect	text12
  2471  0599                     __ptext12:	
  2472 ;; *************** function ___lldiv *****************
  2473 ;; Defined at:
  2474 ;;		line 6 in file "/opt/microchip/xc8/v1.41/sources/common/lldiv.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  divisor         4    0[COMMON] unsigned long 
  2477 ;;  dividend        4    4[COMMON] unsigned long 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  quotient        4    9[COMMON] unsigned long 
  2480 ;;  counter         1   13[COMMON] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  4    0[COMMON] unsigned long 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         8       0       0       0       0
  2491 ;;      Locals:         5       0       0       0       0
  2492 ;;      Temps:          1       0       0       0       0
  2493 ;;      Totals:        14       0       0       0       0
  2494 ;;Total ram usage:       14 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_I2C_Master_Init
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function ___lldiv
  2505  0599                     ___lldiv:	
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2509  0599  3000               	movlw	0
  2510  059A  00FC               	movwf	___lldiv@quotient+3
  2511  059B  3000               	movlw	0
  2512  059C  00FB               	movwf	___lldiv@quotient+2
  2513  059D  3000               	movlw	0
  2514  059E  00FA               	movwf	___lldiv@quotient+1
  2515  059F  3000               	movlw	0
  2516  05A0  00F9               	movwf	___lldiv@quotient
  2517  05A1  0873               	movf	___lldiv@divisor+3,w
  2518  05A2  0472               	iorwf	___lldiv@divisor+2,w
  2519  05A3  0471               	iorwf	___lldiv@divisor+1,w
  2520  05A4  0470               	iorwf	___lldiv@divisor,w
  2521  05A5  1903               	skipnz
  2522  05A6  2DEE               	goto	l1564
  2523  05A7  01FD               	clrf	___lldiv@counter
  2524  05A8  0AFD               	incf	___lldiv@counter,f
  2525  05A9                     l1550:	
  2526  05A9  1BF3               	btfsc	___lldiv@divisor+3,7
  2527  05AA  2DB9               	goto	l1552
  2528  05AB  3001               	movlw	1
  2529  05AC  00F8               	movwf	??___lldiv
  2530  05AD                     u785:	
  2531  05AD  1003               	clrc
  2532  05AE  0DF0               	rlf	___lldiv@divisor,f
  2533  05AF  0DF1               	rlf	___lldiv@divisor+1,f
  2534  05B0  0DF2               	rlf	___lldiv@divisor+2,f
  2535  05B1  0DF3               	rlf	___lldiv@divisor+3,f
  2536  05B2  0BF8               	decfsz	??___lldiv,f
  2537  05B3  2DAD               	goto	u785
  2538  05B4  3001               	movlw	1
  2539  05B5  00F8               	movwf	??___lldiv
  2540  05B6  0878               	movf	??___lldiv,w
  2541  05B7  07FD               	addwf	___lldiv@counter,f
  2542  05B8  2DA9               	goto	l1550
  2543  05B9                     l1552:	
  2544  05B9  3001               	movlw	1
  2545  05BA  00F8               	movwf	??___lldiv
  2546  05BB                     u805:	
  2547  05BB  1003               	clrc
  2548  05BC  0DF9               	rlf	___lldiv@quotient,f
  2549  05BD  0DFA               	rlf	___lldiv@quotient+1,f
  2550  05BE  0DFB               	rlf	___lldiv@quotient+2,f
  2551  05BF  0DFC               	rlf	___lldiv@quotient+3,f
  2552  05C0  0BF8               	decfsz	??___lldiv,f
  2553  05C1  2DBB               	goto	u805
  2554  05C2  0873               	movf	___lldiv@divisor+3,w
  2555  05C3  0277               	subwf	___lldiv@dividend+3,w
  2556  05C4  1D03               	skipz
  2557  05C5  2DD0               	goto	u815
  2558  05C6  0872               	movf	___lldiv@divisor+2,w
  2559  05C7  0276               	subwf	___lldiv@dividend+2,w
  2560  05C8  1D03               	skipz
  2561  05C9  2DD0               	goto	u815
  2562  05CA  0871               	movf	___lldiv@divisor+1,w
  2563  05CB  0275               	subwf	___lldiv@dividend+1,w
  2564  05CC  1D03               	skipz
  2565  05CD  2DD0               	goto	u815
  2566  05CE  0870               	movf	___lldiv@divisor,w
  2567  05CF  0274               	subwf	___lldiv@dividend,w
  2568  05D0                     u815:	
  2569  05D0  1C03               	skipc
  2570  05D1  2DE1               	goto	l1560
  2571  05D2  0870               	movf	___lldiv@divisor,w
  2572  05D3  02F4               	subwf	___lldiv@dividend,f
  2573  05D4  0871               	movf	___lldiv@divisor+1,w
  2574  05D5  1C03               	skipc
  2575  05D6  0F71               	incfsz	___lldiv@divisor+1,w
  2576  05D7  02F5               	subwf	___lldiv@dividend+1,f
  2577  05D8  0872               	movf	___lldiv@divisor+2,w
  2578  05D9  1C03               	skipc
  2579  05DA  0F72               	incfsz	___lldiv@divisor+2,w
  2580  05DB  02F6               	subwf	___lldiv@dividend+2,f
  2581  05DC  0873               	movf	___lldiv@divisor+3,w
  2582  05DD  1C03               	skipc
  2583  05DE  0F73               	incfsz	___lldiv@divisor+3,w
  2584  05DF  02F7               	subwf	___lldiv@dividend+3,f
  2585  05E0  1479               	bsf	___lldiv@quotient,0
  2586  05E1                     l1560:	
  2587  05E1  3001               	movlw	1
  2588  05E2                     u825:	
  2589  05E2  1003               	clrc
  2590  05E3  0CF3               	rrf	___lldiv@divisor+3,f
  2591  05E4  0CF2               	rrf	___lldiv@divisor+2,f
  2592  05E5  0CF1               	rrf	___lldiv@divisor+1,f
  2593  05E6  0CF0               	rrf	___lldiv@divisor,f
  2594  05E7  3EFF               	addlw	-1
  2595  05E8  1D03               	skipz
  2596  05E9  2DE2               	goto	u825
  2597  05EA  3001               	movlw	1
  2598  05EB  02FD               	subwf	___lldiv@counter,f
  2599  05EC  1D03               	btfss	3,2
  2600  05ED  2DB9               	goto	l1552
  2601  05EE                     l1564:	
  2602  05EE  087C               	movf	___lldiv@quotient+3,w
  2603  05EF  00F3               	movwf	?___lldiv+3
  2604  05F0  087B               	movf	___lldiv@quotient+2,w
  2605  05F1  00F2               	movwf	?___lldiv+2
  2606  05F2  087A               	movf	___lldiv@quotient+1,w
  2607  05F3  00F1               	movwf	?___lldiv+1
  2608  05F4  0879               	movf	___lldiv@quotient,w
  2609  05F5  00F0               	movwf	?___lldiv
  2610  05F6  0008               	return
  2611  05F7                     __end_of___lldiv:	
  2612                           
  2613                           	psect	text13
  2614  05F7                     __ptext13:	
  2615 ;; *************** function _Display_Begin *****************
  2616 ;; Defined at:
  2617 ;;		line 15 in file "display.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  addr            2    0[BANK0 ] int 
  2620 ;;  cols            2    2[BANK0 ] int 
  2621 ;;  rows            2    4[BANK0 ] int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       6       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       3       0       0       0
  2636 ;;      Totals:         0       9       0       0       0
  2637 ;;Total ram usage:        9 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    7
  2640 ;; This function calls:
  2641 ;;		_command
  2642 ;;		_expanderWrite
  2643 ;;		_write4bits
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _Display_Begin
  2651  05F7                     _Display_Begin:	
  2652                           
  2653                           ;display.c: 17: _addr = addr;
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _Display_Begin: [wreg+status,2+status,0+pclath+cstack]
  2657  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2658  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2659  05F9  0821               	movf	Display_Begin@addr+1,w
  2660  05FA  00D0               	movwf	__addr+1
  2661  05FB  0820               	movf	Display_Begin@addr,w
  2662  05FC  00CF               	movwf	__addr
  2663                           
  2664                           ;display.c: 18: _cols = cols;
  2665  05FD  0823               	movf	Display_Begin@cols+1,w
  2666  05FE  00CE               	movwf	__cols+1
  2667  05FF  0822               	movf	Display_Begin@cols,w
  2668  0600  00CD               	movwf	__cols
  2669                           
  2670                           ;display.c: 19: _rows = rows;
  2671  0601  0825               	movf	Display_Begin@rows+1,w
  2672  0602  00CC               	movwf	__rows+1
  2673  0603  0824               	movf	Display_Begin@rows,w
  2674  0604  00CB               	movwf	__rows
  2675                           
  2676                           ;display.c: 22: _delay((unsigned long)((50000)*(16000000/4000000.0)));
  2677  0605  3002               	movlw	2
  2678  0606  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0607  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0608  00A8               	movwf	??_Display_Begin+2
  2681  0609  3004               	movlw	4
  2682  060A  00A7               	movwf	??_Display_Begin+1
  2683  060B  30B9               	movlw	185
  2684  060C  00A6               	movwf	??_Display_Begin
  2685  060D                     u1367:	
  2686  060D  0BA6               	decfsz	??_Display_Begin,f
  2687  060E  2E0D               	goto	u1367
  2688  060F  0BA7               	decfsz	??_Display_Begin+1,f
  2689  0610  2E0D               	goto	u1367
  2690  0611  0BA8               	decfsz	??_Display_Begin+2,f
  2691  0612  2E0D               	goto	u1367
  2692  0613  2E14               	nop2
  2693                           
  2694                           ;display.c: 25: expanderWrite(((0b00000000 | 0b00000100) & ~0b00000001) & (~0b00000010))
      +                          ;
  2695  0614  3004               	movlw	4
  2696  0615  120A  118A  23F3  120A  118A  	fcall	_expanderWrite
  2697                           
  2698                           ;display.c: 26: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2699  061A  3015               	movlw	21
  2700  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2701  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2702  061D  00A8               	movwf	??_Display_Begin+2
  2703  061E  304B               	movlw	75
  2704  061F  00A7               	movwf	??_Display_Begin+1
  2705  0620  30BD               	movlw	189
  2706  0621  00A6               	movwf	??_Display_Begin
  2707  0622                     u1377:	
  2708  0622  0BA6               	decfsz	??_Display_Begin,f
  2709  0623  2E22               	goto	u1377
  2710  0624  0BA7               	decfsz	??_Display_Begin+1,f
  2711  0625  2E22               	goto	u1377
  2712  0626  0BA8               	decfsz	??_Display_Begin+2,f
  2713  0627  2E22               	goto	u1377
  2714  0628  2E29               	nop2
  2715                           
  2716                           ;display.c: 31: write4bits(0x03 << 4);
  2717  0629  3030               	movlw	48
  2718  062A  120A  118A  237F  120A  118A  	fcall	_write4bits
  2719                           
  2720                           ;display.c: 32: _delay((unsigned long)((4500)*(16000000/4000000.0)));
  2721  062F  3018               	movlw	24
  2722  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0632  00A7               	movwf	??_Display_Begin+1
  2725  0633  305E               	movlw	94
  2726  0634  00A6               	movwf	??_Display_Begin
  2727  0635                     u1387:	
  2728  0635  0BA6               	decfsz	??_Display_Begin,f
  2729  0636  2E35               	goto	u1387
  2730  0637  0BA7               	decfsz	??_Display_Begin+1,f
  2731  0638  2E35               	goto	u1387
  2732  0639  0000               	nop
  2733                           
  2734                           ;display.c: 35: write4bits(0x03 << 4);
  2735  063A  3030               	movlw	48
  2736  063B  120A  118A  237F  120A  118A  	fcall	_write4bits
  2737                           
  2738                           ;display.c: 36: _delay((unsigned long)((150)*(16000000/4000000.0)));
  2739  0640  30C7               	movlw	199
  2740  0641  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0642  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0643  00A6               	movwf	??_Display_Begin
  2743  0644                     u1397:	
  2744  0644  0BA6               	decfsz	??_Display_Begin,f
  2745  0645  2E44               	goto	u1397
  2746                           
  2747                           ;display.c: 39: write4bits(0x03 << 4);
  2748  0646  3030               	movlw	48
  2749  0647  120A  118A  237F  120A  118A  	fcall	_write4bits
  2750                           
  2751                           ;display.c: 40: _delay((unsigned long)((150)*(16000000/4000000.0)));
  2752  064C  30C7               	movlw	199
  2753  064D  1283               	bcf	3,5	;RP0=0, select bank0
  2754  064E  1303               	bcf	3,6	;RP1=0, select bank0
  2755  064F  00A6               	movwf	??_Display_Begin
  2756  0650                     u1407:	
  2757  0650  0BA6               	decfsz	??_Display_Begin,f
  2758  0651  2E50               	goto	u1407
  2759                           
  2760                           ;display.c: 43: write4bits(0x02 << 4);
  2761  0652  3020               	movlw	32
  2762  0653  120A  118A  237F  120A  118A  	fcall	_write4bits
  2763                           
  2764                           ;display.c: 44: _delay((unsigned long)((150)*(16000000/4000000.0)));
  2765  0658  30C7               	movlw	199
  2766  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2767  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2768  065B  00A6               	movwf	??_Display_Begin
  2769  065C                     u1417:	
  2770  065C  0BA6               	decfsz	??_Display_Begin,f
  2771  065D  2E5C               	goto	u1417
  2772                           
  2773                           ;display.c: 52: _displayfunction = 0x00 | 0x00 | 0x00;
  2774  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2775  065F  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0660  01D5               	clrf	__displayfunction
  2777  0661  01D6               	clrf	__displayfunction+1
  2778                           
  2779                           ;display.c: 53: _displayfunction |= 0x08;
  2780  0662  15D5               	bsf	__displayfunction,3
  2781                           
  2782                           ;display.c: 54: command(0x20 | _displayfunction);
  2783  0663  0855               	movf	__displayfunction,w
  2784  0664  3820               	iorlw	32
  2785  0665  120A  118A  2350  120A  118A  	fcall	_command
  2786                           
  2787                           ;display.c: 57: _displaycontrol = 0x04 | 0x00 | 0x00;
  2788  066A  3004               	movlw	4
  2789  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2790  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2791  066D  00D3               	movwf	__displaycontrol
  2792  066E  3000               	movlw	0
  2793  066F  00D4               	movwf	__displaycontrol+1
  2794                           
  2795                           ;display.c: 64: _displaymode = 0x02 | 0x00;
  2796  0670  3002               	movlw	2
  2797  0671  00D1               	movwf	__displaymode
  2798  0672  3000               	movlw	0
  2799  0673  00D2               	movwf	__displaymode+1
  2800                           
  2801                           ;display.c: 67: command(0x04 | _displaymode);
  2802  0674  0851               	movf	__displaymode,w
  2803  0675  3804               	iorlw	4
  2804  0676  120A  118A  2350   	fcall	_command
  2805  0679  0008               	return
  2806  067A                     __end_of_Display_Begin:	
  2807                           
  2808                           	psect	text14
  2809  0350                     __ptext14:	
  2810 ;; *************** function _command *****************
  2811 ;; Defined at:
  2812 ;;		line 114 in file "display.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  value           1    wreg     unsigned char 
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;  value           1   12[COMMON] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, pclath, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2826 ;;      Params:         0       0       0       0       0
  2827 ;;      Locals:         1       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0
  2829 ;;      Totals:         1       0       0       0       0
  2830 ;;Total ram usage:        1 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    6
  2833 ;; This function calls:
  2834 ;;		_send
  2835 ;; This function is called by:
  2836 ;;		_Display_Begin
  2837 ;;		_clear
  2838 ;;		_setCursor
  2839 ;;		_noCursor
  2840 ;;		_home
  2841 ;;		_display
  2842 ;;		_noDisplay
  2843 ;;		_cursor
  2844 ;;		_blink
  2845 ;;		_noBlink
  2846 ;;		_scrollDisplayLeft
  2847 ;;		_scrollDisplayRight
  2848 ;;		_leftToRight
  2849 ;;		_rightToLeft
  2850 ;;		_autoscroll
  2851 ;;		_noAutoscroll
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _command
  2857  0350                     _command:	
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  2861                           ;command@value stored from wreg
  2862  0350  00FC               	movwf	command@value
  2863                           
  2864                           ;display.c: 116: send(value, 0);
  2865  0351  01F6               	clrf	send@mode
  2866  0352  087C               	movf	command@value,w
  2867  0353  120A  118A  240C   	fcall	_send
  2868  0356  0008               	return
  2869  0357                     __end_of_command:	
  2870                           
  2871                           	psect	text15
  2872  040C                     __ptext15:	
  2873 ;; *************** function _send *****************
  2874 ;; Defined at:
  2875 ;;		line 73 in file "display.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  value           1    wreg     unsigned char 
  2878 ;;  mode            1    6[COMMON] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  value           1   11[COMMON] unsigned char 
  2881 ;;  lownib          1   10[COMMON] unsigned char 
  2882 ;;  highnib         1    9[COMMON] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         1       0       0       0       0
  2893 ;;      Locals:         3       0       0       0       0
  2894 ;;      Temps:          2       0       0       0       0
  2895 ;;      Totals:         6       0       0       0       0
  2896 ;;Total ram usage:        6 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    5
  2899 ;; This function calls:
  2900 ;;		_write4bits
  2901 ;; This function is called by:
  2902 ;;		_command
  2903 ;;		_write
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _send
  2909  040C                     _send:	
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _send: [wreg+status,2+status,0+pclath+cstack]
  2913                           ;send@value stored from wreg
  2914  040C  00FB               	movwf	send@value
  2915                           
  2916                           ;display.c: 75: unsigned char highnib=value&0xf0;
  2917  040D  087B               	movf	send@value,w
  2918  040E  39F0               	andlw	240
  2919  040F  00F7               	movwf	??_send
  2920  0410  0877               	movf	??_send,w
  2921  0411  00F9               	movwf	send@highnib
  2922                           
  2923                           ;display.c: 76: unsigned char lownib=(value<<4)&0xf0;
  2924  0412  087B               	movf	send@value,w
  2925  0413  00F7               	movwf	??_send
  2926  0414  3003               	movlw	3
  2927  0415                     u685:	
  2928  0415  1003               	clrc
  2929  0416  0DF7               	rlf	??_send,f
  2930  0417  3EFF               	addlw	-1
  2931  0418  1D03               	skipz
  2932  0419  2C15               	goto	u685
  2933  041A  1003               	clrc
  2934  041B  0D77               	rlf	??_send,w
  2935  041C  39F0               	andlw	240
  2936  041D  00F8               	movwf	??_send+1
  2937  041E  0878               	movf	??_send+1,w
  2938  041F  00FA               	movwf	send@lownib
  2939                           
  2940                           ;display.c: 77: write4bits((highnib)|0b00000100|mode);
  2941  0420  0879               	movf	send@highnib,w
  2942  0421  0476               	iorwf	send@mode,w
  2943  0422  3804               	iorlw	4
  2944  0423  120A  118A  237F  120A  118A  	fcall	_write4bits
  2945                           
  2946                           ;display.c: 78: write4bits((lownib)|0b00000100|mode);
  2947  0428  087A               	movf	send@lownib,w
  2948  0429  0476               	iorwf	send@mode,w
  2949  042A  3804               	iorlw	4
  2950  042B  120A  118A  237F   	fcall	_write4bits
  2951  042E  0008               	return
  2952  042F                     __end_of_send:	
  2953                           
  2954                           	psect	text16
  2955  037F                     __ptext16:	
  2956 ;; *************** function _write4bits *****************
  2957 ;; Defined at:
  2958 ;;		line 81 in file "display.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  value           1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  value           1    5[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         1       0       0       0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    4
  2979 ;; This function calls:
  2980 ;;		_expanderWrite
  2981 ;;		_pulseEnable
  2982 ;; This function is called by:
  2983 ;;		_Display_Begin
  2984 ;;		_send
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _write4bits
  2990  037F                     _write4bits:	
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _write4bits: [wreg+status,2+status,0+pclath+cstack]
  2994                           ;write4bits@value stored from wreg
  2995  037F  00F5               	movwf	write4bits@value
  2996                           
  2997                           ;display.c: 83: expanderWrite(value & ~0b00000010);
  2998  0380  0875               	movf	write4bits@value,w
  2999  0381  39FD               	andlw	253
  3000  0382  120A  118A  23F3  120A  118A  	fcall	_expanderWrite
  3001                           
  3002                           ;display.c: 84: pulseEnable(value & ~0b00000010);
  3003  0387  0875               	movf	write4bits@value,w
  3004  0388  39FD               	andlw	253
  3005  0389  120A  118A  23C4   	fcall	_pulseEnable
  3006  038C  0008               	return
  3007  038D                     __end_of_write4bits:	
  3008                           
  3009                           	psect	text17
  3010  03C4                     __ptext17:	
  3011 ;; *************** function _pulseEnable *****************
  3012 ;; Defined at:
  3013 ;;		line 95 in file "display.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  data            1    wreg     unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  data            1    4[COMMON] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0
  3029 ;;      Temps:          1       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    3
  3034 ;; This function calls:
  3035 ;;		_expanderWrite
  3036 ;; This function is called by:
  3037 ;;		_write4bits
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _pulseEnable
  3043  03C4                     _pulseEnable:	
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _pulseEnable: [wreg+status,2+status,0+pclath+cstack]
  3047                           ;pulseEnable@data stored from wreg
  3048  03C4  00F4               	movwf	pulseEnable@data
  3049                           
  3050                           ;display.c: 97: expanderWrite(data | 0b00000100);
  3051  03C5  0874               	movf	pulseEnable@data,w
  3052  03C6  3804               	iorlw	4
  3053  03C7  120A  118A  23F3  120A  118A  	fcall	_expanderWrite
  3054                           
  3055                           ;display.c: 98: _delay((unsigned long)((1)*(16000000/4000000.0)));
  3056  03CC  2BCD               	nop2	;2 cycle nop
  3057  03CD  2BCE               	nop2	;2 cycle nop
  3058                           
  3059                           ;display.c: 100: expanderWrite(data & ~0b00000100);
  3060  03CE  0874               	movf	pulseEnable@data,w
  3061  03CF  39FB               	andlw	251
  3062  03D0  120A  118A  23F3  120A  118A  	fcall	_expanderWrite
  3063                           
  3064                           ;display.c: 101: _delay((unsigned long)((50)*(16000000/4000000.0)));
  3065  03D5  3042               	movlw	66
  3066  03D6  00F3               	movwf	??_pulseEnable
  3067  03D7                     u1427:	
  3068  03D7  0BF3               	decfsz	??_pulseEnable,f
  3069  03D8  2BD7               	goto	u1427
  3070  03D9  0000               	nop
  3071  03DA  0008               	return
  3072  03DB                     __end_of_pulseEnable:	
  3073                           
  3074                           	psect	text18
  3075  03F3                     __ptext18:	
  3076 ;; *************** function _expanderWrite *****************
  3077 ;; Defined at:
  3078 ;;		line 87 in file "display.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  data            1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  data            1    2[COMMON] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         1       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0
  3095 ;;      Totals:         1       0       0       0       0
  3096 ;;Total ram usage:        1 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    2
  3099 ;; This function calls:
  3100 ;;		_I2C_Master_Start
  3101 ;;		_I2C_Master_Stop
  3102 ;;		_I2C_Master_Write
  3103 ;; This function is called by:
  3104 ;;		_Display_Begin
  3105 ;;		_write4bits
  3106 ;;		_pulseEnable
  3107 ;;		_backlight
  3108 ;;		_noBacklight
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _expanderWrite
  3114  03F3                     _expanderWrite:	
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _expanderWrite: [wreg+status,2+status,0+pclath+cstack]
  3118                           ;expanderWrite@data stored from wreg
  3119  03F3  00F2               	movwf	expanderWrite@data
  3120                           
  3121                           ;display.c: 89: I2C_Master_Start();
  3122  03F4  120A  118A  2342  120A  118A  	fcall	_I2C_Master_Start
  3123                           
  3124                           ;display.c: 90: I2C_Master_Write(0x40);
  3125  03F9  3040               	movlw	64
  3126  03FA  120A  118A  23DB  120A  118A  	fcall	_I2C_Master_Write
  3127                           
  3128                           ;display.c: 91: I2C_Master_Write(data | _backlightval);
  3129  03FF  0872               	movf	expanderWrite@data,w
  3130  0400  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0401  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0402  0449               	iorwf	__backlightval,w
  3133  0403  120A  118A  23DB  120A  118A  	fcall	_I2C_Master_Write
  3134                           
  3135                           ;display.c: 92: I2C_Master_Stop();
  3136  0408  120A  118A  2349   	fcall	_I2C_Master_Stop
  3137  040B  0008               	return
  3138  040C                     __end_of_expanderWrite:	
  3139                           
  3140                           	psect	text19
  3141  03DB                     __ptext19:	
  3142 ;; *************** function _I2C_Master_Write *****************
  3143 ;; Defined at:
  3144 ;;		line 38 in file "i2c.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  d               1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  d               1    0[COMMON] unsigned char 
  3149 ;;  ackflag         1    1[COMMON] unsigned char 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3159 ;;      Params:         0       0       0       0       0
  3160 ;;      Locals:         2       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0
  3162 ;;      Totals:         2       0       0       0       0
  3163 ;;Total ram usage:        2 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    1
  3166 ;; This function calls:
  3167 ;;		_I2C_Master_Wait
  3168 ;; This function is called by:
  3169 ;;		_expanderWrite
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _I2C_Master_Write
  3175  03DB                     _I2C_Master_Write:	
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3179                           ;I2C_Master_Write@d stored from wreg
  3180  03DB  00F0               	movwf	I2C_Master_Write@d
  3181  03DC                     l1458:	
  3182                           
  3183                           ;i2c.c: 53: ackflag = 1;
  3184  03DC  01F1               	clrf	I2C_Master_Write@ackflag
  3185  03DD  0AF1               	incf	I2C_Master_Write@ackflag,f
  3186  03DE                     l1460:	
  3187  03DE  0871               	movf	I2C_Master_Write@ackflag,w
  3188  03DF  1903               	btfsc	3,2
  3189  03E0  0008               	return
  3190                           
  3191                           ;i2c.c: 46: {
  3192                           ;i2c.c: 47: I2C_Master_Wait();
  3193                           
  3194                           ;i2c.c: 45: while(ackflag)
  3195                           
  3196                           ;i2c.c: 44: unsigned char ackflag = 1;
  3197  03E1  120A  118A  235F  120A  118A  	fcall	_I2C_Master_Wait
  3198                           
  3199                           ;i2c.c: 48: SSPIF = 0;
  3200  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3201  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3202  03E8  118C               	bcf	12,3	;volatile
  3203                           
  3204                           ;i2c.c: 49: SSPBUF = d;
  3205  03E9  0870               	movf	I2C_Master_Write@d,w
  3206  03EA  0093               	movwf	19	;volatile
  3207  03EB                     l89:	
  3208                           ;i2c.c: 50: while(!SSPIF);
  3209                           
  3210  03EB  1D8C               	btfss	12,3	;volatile
  3211  03EC  2BEB               	goto	l89
  3212                           
  3213                           ;i2c.c: 51: ackflag = 0;
  3214  03ED  01F1               	clrf	I2C_Master_Write@ackflag
  3215                           
  3216                           ;i2c.c: 52: if(ACKSTAT)
  3217  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  3218  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  3219  03F0  1B11               	btfsc	17,6	;volatile
  3220  03F1  2BDC               	goto	l1458
  3221  03F2  2BDE               	goto	l1460
  3222  03F3                     __end_of_I2C_Master_Write:	
  3223                           
  3224                           	psect	text20
  3225  0349                     __ptext20:	
  3226 ;; *************** function _I2C_Master_Stop *****************
  3227 ;; Defined at:
  3228 ;;		line 32 in file "i2c.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    1
  3249 ;; This function calls:
  3250 ;;		_I2C_Master_Wait
  3251 ;; This function is called by:
  3252 ;;		_expanderWrite
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _I2C_Master_Stop
  3258  0349                     _I2C_Master_Stop:	
  3259                           
  3260                           ;i2c.c: 34: I2C_Master_Wait();
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3264  0349  120A  118A  235F   	fcall	_I2C_Master_Wait
  3265                           
  3266                           ;i2c.c: 35: PEN = 1;
  3267  034C  1683               	bsf	3,5	;RP0=1, select bank1
  3268  034D  1303               	bcf	3,6	;RP1=0, select bank1
  3269  034E  1511               	bsf	17,2	;volatile
  3270  034F  0008               	return
  3271  0350                     __end_of_I2C_Master_Stop:	
  3272                           
  3273                           	psect	text21
  3274  0342                     __ptext21:	
  3275 ;; *************** function _I2C_Master_Start *****************
  3276 ;; Defined at:
  3277 ;;		line 20 in file "i2c.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    1
  3298 ;; This function calls:
  3299 ;;		_I2C_Master_Wait
  3300 ;; This function is called by:
  3301 ;;		_expanderWrite
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           
  3306                           ;psect for function _I2C_Master_Start
  3307  0342                     _I2C_Master_Start:	
  3308                           
  3309                           ;i2c.c: 22: I2C_Master_Wait();
  3310                           
  3311                           ;incstack = 0
  3312                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3313  0342  120A  118A  235F   	fcall	_I2C_Master_Wait
  3314                           
  3315                           ;i2c.c: 23: SEN = 1;
  3316  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0347  1411               	bsf	17,0	;volatile
  3319  0348  0008               	return
  3320  0349                     __end_of_I2C_Master_Start:	
  3321                           
  3322                           	psect	text22
  3323  035F                     __ptext22:	
  3324 ;; *************** function _I2C_Master_Wait *****************
  3325 ;; Defined at:
  3326 ;;		line 15 in file "i2c.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_I2C_Master_Start
  3350 ;;		_I2C_Master_Stop
  3351 ;;		_I2C_Master_Write
  3352 ;;		_I2C_Master_RepeatedStart
  3353 ;;		_I2C_Master_Read
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           
  3358                           ;psect for function _I2C_Master_Wait
  3359  035F                     _I2C_Master_Wait:	
  3360  035F                     l72:	
  3361                           ;i2c.c: 17: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3365                           
  3366  035F  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0360  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0361  1914               	btfsc	20,2	;volatile
  3369  0362  2B5F               	goto	l72
  3370  0363  0811               	movf	17,w	;volatile
  3371  0364  391F               	andlw	31
  3372  0365  1903               	btfsc	3,2
  3373  0366  0008               	return
  3374  0367  2B5F               	goto	l72
  3375  0368                     __end_of_I2C_Master_Wait:	
  3376  007E                     btemp	set	126	;btemp
  3377  007E                     wtemp0	set	126


Data Sizes:
    Strings     192
    Constant    0
    Data        20
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 10
		 -> test_adc@buf(COMMON[10]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 10
		 -> test_adc@buf(COMMON[10]), 

    writeStr@message	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[15]), 

    writeStr@message_ptr	PTR unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[12]), STR_2(CODE[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->_writeChar
    _main->_writeStr
    _writeStr->_write
    _writeChar->_write
    _write->_send
    _setCursor->_command
    _rand->___lmul
    _noCursor->_command
    _clear->_command
    _backlight->_expanderWrite
    _I2C_Master_Init->___lldiv
    _Display_Begin->_command
    _command->_send
    _send->_write4bits
    _write4bits->_pulseEnable
    _pulseEnable->_expanderWrite
    _expanderWrite->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_setCursor
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5507
                                             16 BANK0     13    13      0
                      _Display_Begin
                    _I2C_Master_Init
                            ___awmod
                          _backlight
                              _clear
                           _noCursor
                               _rand
                          _setCursor
                          _writeChar
                           _writeStr
 ---------------------------------------------------------------------------------
 (1) _writeStr                                             3     3      0     637
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                              _write
 ---------------------------------------------------------------------------------
 (1) _writeChar                                            1     1      0     510
                                             13 COMMON     1     1      0
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                1     1      0     488
                                             12 COMMON     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (1) _setCursor                                           16    12      4    1109
                                              0 BANK0     16    12      4
                            _command
 ---------------------------------------------------------------------------------
 (1) _rand                                                 7     5      2     198
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) _noCursor                                             0     0      0     488
                            _command
 ---------------------------------------------------------------------------------
 (1) _clear                                                2     2      0     488
                                              0 BANK0      2     2      0
                            _command
 ---------------------------------------------------------------------------------
 (1) _backlight                                            0     0      0      69
                      _expanderWrite
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Display_Begin                                        9     3      6    1008
                                              0 BANK0      9     3      6
                            _command
                      _expanderWrite
                         _write4bits
 ---------------------------------------------------------------------------------
 (2) _command                                              1     1      0     488
                                             12 COMMON     1     1      0
                               _send
 ---------------------------------------------------------------------------------
 (3) _send                                                 6     5      1     466
                                              6 COMMON     6     5      1
                         _write4bits
 ---------------------------------------------------------------------------------
 (4) _write4bits                                           1     1      0     226
                                              5 COMMON     1     1      0
                      _expanderWrite
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (5) _pulseEnable                                          2     2      0     113
                                              3 COMMON     2     2      0
                      _expanderWrite
 ---------------------------------------------------------------------------------
 (6) _expanderWrite                                        1     1      0      69
                                              2 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Write                                     2     2      0      47
                                              0 COMMON     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (8) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_Begin
     _command
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
     _expanderWrite
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _write4bits
       _expanderWrite
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _pulseEnable
         _expanderWrite
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   ___awmod
     _rand (ARG)
       ___lmul
   _backlight
     _expanderWrite
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _clear
     _command
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
   _noCursor
     _command
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
   _rand
     ___lmul
   _setCursor
     _command
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
   _writeChar
     _write
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait
   _writeStr
     _write
       _send
         _write4bits
           _expanderWrite
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
           _pulseEnable
             _expanderWrite
               _I2C_Master_Start
                 _I2C_Master_Wait
               _I2C_Master_Stop
                 _I2C_Master_Wait
               _I2C_Master_Write
                 _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 13 06:55:36 2017

                        pc 0002                __CFG_CP$OFF 0000                         l32 07C6  
                       l72 035F                         l89 03EB                         _GO 00F9  
                       _RS 0057                         fsr 0004                        _CKE 04A6  
                      _PEN 048A               __CFG_CPD$OFF 0000                        _SEN 0488  
                      u805 05BB                        u815 05D0                        u825 05E2  
                      u745 04E6                        u850 0494                        u755 04EE  
                      u685 0415                        u845 0465                        u785 05AD  
                      u865 04AB                        u955 0568                        u885 053E  
                      _SMP 04A7                        u975 0579                        u985 0582  
                      _R_W 04A2                        fsr0 0004                        indf 0000  
             ___awmod@sign 002C               __CFG_FOSC$HS 0000          Display_Begin@addr 0020  
        Display_Begin@cols 0022          Display_Begin@rows 0024               __CFG_LVP$OFF 0000  
                     l1460 03DE                       l1700 0573                       l1532 04CE  
                     l1550 05A9                       l1560 05E1                       l1552 05B9  
                     l1712 0594                       l1704 0581                       l1536 04E4  
                     l1458 03DC                       l1626 04B7                       l1634 0436  
                     l1564 05EE                       l1708 058C                       l1690 055F  
                     l1748 0702                       l1686 0558                       l1776 0786  
                     l1768 0769                       l1698 0565                       l1798 07D1  
                     STR_1 009C                       STR_2 008C                       STR_3 00B8  
                     STR_4 0009                       STR_5 0046                       STR_6 0028  
                     STR_7 0062                       STR_8 007B                       STR_9 00AB  
                     u1035 078C                       u1317 0696                       u1407 0650  
                     u1327 06EE                       u1417 065C                       u1337 07BA  
                     u1427 03D7                       u1347 07D9                       u1357 03AA  
                     u1367 060D                       u1377 0622                       u1387 0635  
                     u1397 0644                       _RCEN 048B                       _RSEN 0489  
                     _TXIF 0064               __CFG_WRT$OFF 0000                       _main 067A  
                     _rand 0505                       _send 040C                       btemp 007E  
                     start 0000            writeStr@message 0020               command@value 007C  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
                    _BCLIF 006B                      ?_rand 0020                      ?_send 0076  
                    STR_10 00C4              __CFG_WDTE$OFF 0000            __end_of___awmod 0599  
          __end_of___lldiv 05F7                      _RCSTA 0018                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      _SSPIF 0063  
                    _TXREG 0019                      _TXSTA 0098        ___lmul@multiplicand 0074  
          __end_of_command 0357                      __addr 004F                      __cols 004D  
                    _clear 039E                      __rows 004B                      _randx 0045  
                    _write 0357             __CFG_BOREN$OFF 0000                      pclath 000A  
          pulseEnable@data 0074                      status 0003                      wtemp0 007E  
          __initialization 07E9               __end_of_main 07E9               __end_of_rand 054C  
             __end_of_send 042F                     ??_main 0030                     ??_rand 0022  
                   ??_send 0077          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
                   ?_clear 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0070  
                   _ADRESH 001E                     _ADRESL 009E                     ?_write 0070  
             __displaymode 0051                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000                     ___lmul 04C6                  ??___awmod 007D  
                ??___lldiv 0078           __end_of_noCursor 037F            ___awmod@divisor 0027  
          ___awmod@counter 002B                  ??_command 007C           __end_of_writeStr 0453  
  __end_of__initialization 07FC         __size_of_backlight 000B               ?_pulseEnable 0070  
           __pcstackCOMMON 0070               __pidataBANK0 03B0              __end_of_clear 03B0  
            __end_of_write 035F     __size_of_expanderWrite 0019                    ??_clear 0020  
                  ??_write 007C                 __pbssBANK0 0051                send@highnib 0079  
    __end_of_Display_Begin 067A                 __pmaintext 067A                    ?___lmul 0070  
       __size_of_setCursor 003C                    _ACKSTAT 048E             ___lmul@product 0079  
        __end_of_backlight 0373                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003              _expanderWrite 03F3                  ?_noCursor 0070  
       __size_of_writeChar 0006            __size_of___lmul 003F                    ___awmod 054C  
                  ___lldiv 0599                    __ptext1 042F                    __ptext2 033C  
                  __ptext3 0357                    __ptext4 048A                    __ptext5 0505  
                  __ptext6 04C6                    __ptext7 0373                    __ptext8 039E  
                  __ptext9 0368                  ?_writeStr 0070                    _command 0350  
         ___awmod@dividend 0029   __size_of_I2C_Master_Init 0037            __displaycontrol 0053  
 __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007                    main@max 0033  
                  main@min 0037            write4bits@value 0075             ?_expanderWrite 0070  
     end_of_initialization 07FC          __end_of_setCursor 04C6                 ??_noCursor 007D  
  I2C_Master_Write@ackflag 0071  __size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0018  
        expanderWrite@data 0072            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020       __size_of_pulseEnable 0017                  _PORTDbits 0008  
               ??_writeStr 007D          __end_of_writeChar 0342                  _TRISCbits 0087  
                _TRISDbits 0088                 main@scaled 0039                 main@timer0 0035  
               _write4bits 037F             __end_of___lmul 0505        start_initialization 07E9  
          ??_expanderWrite 0072          ??_I2C_Master_Init 0024          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                   ??___lmul 0078                 init_fetch0 038D  
              __pdataBANK0 003D                  ___latbits 0002              __pcstackBANK0 0020  
                _backlight 0368          __size_of_noCursor 000C           _I2C_Master_Start 0342  
         _I2C_Master_Write 03DB                 send@lownib 007A                ?_write4bits 0070  
                 ?___awmod 0027                   ?___lldiv 0070                  __pstrings 0003  
                 ?_command 0070          __size_of_writeStr 0024     __size_of_Display_Begin 0083  
           __size_of_clear 0012               setCursor@col 0020               setCursor@row 0022  
               ?_backlight 0070             __size_of_write 0008                  _setCursor 048A  
              __stringbase 0008                  _writeChar 033C          ___lmul@multiplier 0070  
      __size_of_write4bits 000E                 ?_setCursor 0020              ??_pulseEnable 0073  
           setCursor@F1735 003D              _Display_Begin 05F7           __size_of___awmod 004D  
         __size_of___lldiv 005E         __end_of__stringtab 0009           __size_of_command 0007  
          _I2C_Master_Init 0453            _I2C_Master_Wait 035F            _I2C_Master_Stop 0349  
                send@value 007B                 ?_writeChar 0070                   __ptext10 054C  
                 __ptext11 0453                   __ptext20 0349                   __ptext12 0599  
                 __ptext21 0342                   __ptext13 05F7                   __ptext22 035F  
                 __ptext14 0350                   __ptext15 040C                   __ptext16 037F  
                 __ptext17 03C4                   __ptext18 03F3                   __ptext19 03DB  
           writeChar@value 007D                ??_backlight 0073                   _noCursor 0373  
            __size_of_main 016F              __size_of_rand 0047              __size_of_send 0023  
           ?_Display_Begin 0020                 write@value 007C           __displayfunction 0055  
                 main@hits 003B        __end_of_pulseEnable 03DB                   _writeStr 042F  
 __end_of_I2C_Master_Start 0349   __end_of_I2C_Master_Write 03F3                   init_ram0 0391  
    __end_of_expanderWrite 040C                   send@mode 0076           ___lldiv@dividend 0074  
              ??_setCursor 0024                  stringcode 0003               ??_write4bits 0075  
  __end_of_I2C_Master_Init 048A    __end_of_I2C_Master_Wait 0368    __end_of_I2C_Master_Stop 0350  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070                   stringdir 0003  
                 stringtab 0003                ??_writeChar 007D       setCursor@row_offsets 0028  
       __end_of_write4bits 038D        writeStr@message_ptr 0021            ??_Display_Begin 0026  
            __backlightval 0049                _pulseEnable 03C4  
